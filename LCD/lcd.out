cscope 15 $HOME/Desktop/no-os-mini2440/LCD -q 0000001819 0000151272
	@framebuffer.c

6 
	~"‰amebuf„r.h
"

8 
fb_ba£_addr
;

9 
bµ
;

10 
xsize
;

11 
ysize
;

23 
	$PutPixñ
(
UINT32
 
x
, UINT32 
y
, UINT32 
cﬁ‹
)

25 
UINT8
 
ªd
,
gªí
,
blue
;

27 
bµ
){

30 
UINT16
 *
addr
 = (UINT16 *)
fb_ba£_addr
 + (
y
 * 
xsize
 + 
x
);

31 
ªd
 = (
cﬁ‹
 >> 19) & 0xff;

32 
gªí
 = (
cﬁ‹
 >> 10) & 0xff;

33 
blue
 = (
cﬁ‹
 >> 3) & 0xff;

34 
cﬁ‹
 = (
ªd
 << 11Ë| (
gªí
 << 5Ë| 
blue
;

35 *
addr
 = (
UINT16
Ë
cﬁ‹
;

41 
UINT8
 *
addr
 = (UINT8 *)
fb_ba£_addr
 + (
y
 * 
xsize
 + 
x
);

42 *
addr
 = (
UINT8
Ë
cﬁ‹
;

49 
	}
}

62 
	$DøwLöe
(
x1
,
y1
,
x2
,
y2
,
cﬁ‹
)

64 
dx
,
dy
,
e
;

65 
dx
=
x2
-
x1
;

66 
dy
=
y2
-
y1
;

68 if(
dx
>=0)

70 if(
dy
 >= 0)

72 if(
dx
>=
dy
)

74 
e
=
dy
-
dx
/2;

75 
x1
<=
x2
)

77 
	`PutPixñ
(
x1
,
y1
,
cﬁ‹
);

78 if(
e
>0){
y1
+=1;e-=
dx
;}

79 
x1
+=1;

80 
e
+=
dy
;

85 
e
=
dx
-
dy
/2;

86 
y1
<=
y2
)

88 
	`PutPixñ
(
x1
,
y1
,
cﬁ‹
);

89 if(
e
>0){
x1
+=1;e-=
dy
;}

90 
y1
+=1;

91 
e
+=
dx
;

97 
dy
=-dy;

99 if(
dx
>=
dy
)

101 
e
=
dy
-
dx
/2;

102 
x1
<=
x2
)

104 
	`PutPixñ
(
x1
,
y1
,
cﬁ‹
);

105 if(
e
>0){
y1
-=1;e-=
dx
;}

106 
x1
+=1;

107 
e
+=
dy
;

112 
e
=
dx
-
dy
/2;

113 
y1
>=
y2
)

115 
	`PutPixñ
(
x1
,
y1
,
cﬁ‹
);

116 if(
e
>0){
x1
+=1;e-=
dy
;}

117 
y1
-=1;

118 
e
+=
dx
;

125 
dx
=-dx;

126 if(
dy
 >= 0)

128 if(
dx
>=
dy
)

130 
e
=
dy
-
dx
/2;

131 
x1
>=
x2
)

133 
	`PutPixñ
(
x1
,
y1
,
cﬁ‹
);

134 if(
e
>0){
y1
+=1;e-=
dx
;}

135 
x1
-=1;

136 
e
+=
dy
;

141 
e
=
dx
-
dy
/2;

142 
y1
<=
y2
)

144 
	`PutPixñ
(
x1
,
y1
,
cﬁ‹
);

145 if(
e
>0){
x1
-=1;e-=
dy
;}

146 
y1
+=1;

147 
e
+=
dx
;

153 
dy
=-dy;

155 if(
dx
>=
dy
)

157 
e
=
dy
-
dx
/2;

158 
x1
>=
x2
)

160 
	`PutPixñ
(
x1
,
y1
,
cﬁ‹
);

161 if(
e
>0){
y1
-=1;e-=
dx
;}

162 
x1
-=1;

163 
e
+=
dy
;

168 
e
=
dx
-
dy
/2;

169 
y1
>=
y2
)

171 
	`PutPixñ
(
x1
,
y1
,
cﬁ‹
);

172 if(
e
>0){
x1
-=1;e-=
dy
;}

173 
y1
-=1;

174 
e
+=
dx
;

179 
	}
}

184 
	$Múe
()

186 
UINT32
 
x
,
y
;

187 
UINT32
 
cﬁ‹
;

188 
UINT8
 
ªd
,
gªí
,
blue
,
Æpha
;

190 
y
 = 0; y < 
ysize
; y++)

191 
x
 = 0; x < 
xsize
; x++){

192 
cﬁ‹
 = ((
x
-
xsize
/2)*(x-xsize/2Ë+ (
y
-
ysize
/2)*(y-ysize/2))/64;

193 
ªd
 = (
cﬁ‹
/8) % 256;

194 
gªí
 = (
cﬁ‹
/4) % 256;

195 
blue
 = (
cﬁ‹
/2) % 256;

196 
Æpha
 = (
cﬁ‹
*2) % 256;

198 
cﬁ‹
 |((
UINT32
)
Æpha
 << 24);

199 
cﬁ‹
 |((
UINT32
)
ªd
 << 16);

200 
cﬁ‹
 |((
UINT32
)
gªí
 << 8 );

201 
cﬁ‹
 |((
UINT32
)
blue
 );

203 
	`PutPixñ
(
x
,
y
,
cﬁ‹
);

205 
	}
}

216 
	$CÀ¨S¸
(
UINT32
 
cﬁ‹
)

218 
UINT32
 
x
,
y
;

220 
y
 = 0; y < 
ysize
; y++)

221 
x
 = 0; x < 
xsize
; x++)

222 
	`PutPixñ
(
x
, 
y
, 
cﬁ‹
);

223 
	}
}

	@framebuffer.h

6 #i‚de‡
__FRAMEBUFFER_H__


7 
	#__FRAMEBUFFER_H__


	)

9 
	~<ty≥s.h
>

21 
PutPixñ
(
UINT32
 
x
, UINT32 
y
, UINT32 
cﬁ‹
);

34 
DøwLöe
(
x1
,
y1
,
x2
,
y2
,
cﬁ‹
);

39 
Múe
();

50 
CÀ¨S¸
(
UINT32
 
cﬁ‹
);

	@include/ctype.h

6 
	#_U
 0x01

	)

7 
	#_L
 0x02

	)

8 
	#_D
 0x04

	)

9 
	#_C
 0x08

	)

10 
	#_P
 0x10

	)

11 
	#_S
 0x20

	)

12 
	#_X
 0x40

	)

13 
	#_SP
 0x80

	)

15 
_˘y≥
[];

17 
	#__ismask
(
x
Ë(
_˘y≥
[()()(x)])

	)

19 
	#iß um
(
c
Ë((
	`__ismask
(c)&(
_U
|
_L
|
_D
)Ë!0)

	)

20 
	#ißÕha
(
c
Ë((
	`__ismask
(c)&(
_U
|
_L
)Ë!0)

	)

21 
	#is˙ål
(
c
Ë((
	`__ismask
(c)&(
_C
)Ë!0)

	)

22 
	#isdigô
(
c
Ë((
	`__ismask
(c)&(
_D
)Ë!0)

	)

23 
	#isgøph
(
c
Ë((
	`__ismask
(c)&(
_P
|
_U
|
_L
|
_D
)Ë!0)

	)

24 
	#i¶owî
(
c
Ë((
	`__ismask
(c)&(
_L
)Ë!0)

	)

25 
	#i•röt
(
c
Ë((
	`__ismask
(c)&(
_P
|
_U
|
_L
|
_D
|
_SP
)Ë!0)

	)

26 
	#i•un˘
(
c
Ë((
	`__ismask
(c)&(
_P
)Ë!0)

	)

27 
	#is•a˚
(
c
Ë((
	`__ismask
(c)&(
_S
)Ë!0)

	)

28 
	#isuµî
(
c
Ë((
	`__ismask
(c)&(
_U
)Ë!0)

	)

29 
	#isxdigô
(
c
Ë((
	`__ismask
(c)&(
_D
|
_X
)Ë!0)

	)

31 
	#ißscii
(
c
Ë((()(c))<=0x7f)

	)

32 
	#tﬂscii
(
c
Ë((()(c))&0x7f)

	)

34 
ölöe
 
	$__tﬁowî
(
c
)

36 i‡(
	`isuµî
(
c
))

37 
c
 -= 'A'-'a';

38  
c
;

39 
	}
}

41 
ölöe
 
	$__touµî
(
c
)

43 i‡(
	`i¶owî
(
c
))

44 
c
 -= 'a'-'A';

45  
c
;

46 
	}
}

48 
	#tﬁowî
(
c
Ë
	`__tﬁowî
(c)

	)

49 
	#touµî
(
c
Ë
	`__touµî
(c)

	)

	@include/gcclib.h

4 
	#BITS_PER_UNIT
 8

	)

5 
	#SI_TYPE_SIZE
 ( (
SIty≥
Ë* 
BITS_PER_UNIT
)

	)

7 
	tUQIty≥
 
	t__©åibuã__
 ((
	tmode
 (
	tQI
)));

8 
	tSIty≥
 
	t__©åibuã__
 ((
	tmode
 (
	tSI
)));

9 
	tUSIty≥
 
	t__©åibuã__
 ((
	tmode
 (
	tSI
)));

10 
	tDIty≥
 
	t__©åibuã__
 ((
	tmode
 (
	tDI
)));

11 
	tw‹d_ty≥
 
	t__©åibuã__
 ((
	tmode
 (
	t__w‹d__
)));

12 
	tUDIty≥
 
	t__©åibuã__
 ((
	tmode
 (
	tDI
)));

14 #ifde‡
__ARMEB__


15 
	sDI°ru˘
 {
SIty≥
 
	mhigh
, 
	mlow
;};

17 
	sDI°ru˘
 {
SIty≥
 
	mlow
, 
	mhigh
;};

22 
DI°ru˘
 
	ms
;

23 
DIty≥
 
	mŒ
;

24 } 
	tDIuni⁄
;

	@include/kernel.h

1 
	#INT_MAX
 (()(~0U>>1))

	)

2 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

3 
	#UINT_MAX
 (~0U)

	)

4 
	#LONG_MAX
 (()(~0UL>>1))

	)

5 
	#LONG_MIN
 (-
LONG_MAX
 - 1)

	)

6 
	#ULONG_MAX
 (~0UL)

	)

	@include/stdio.h

2 #i‚de‡
_STDIO_H


3 
	#_STDIO_H


	)

5 
	~"ty≥s.h
"

7 #i‚de‡
_VALIST


8 
	#_VALIST


	)

9 *
	tva_li°
;

12 
v¢¥ötf
(*
buf
, 
size_t
 
size
, c⁄° *
fmt
, 
va_li°
 
¨gs
);

13 
¢¥ötf
(* 
buf
, 
size_t
 
size
, c⁄° *
fmt
, ...);

14 
v•rötf
(*
buf
, c⁄° *
fmt
, 
va_li°
 
¨gs
);

15 
•rötf
(* 
buf
, c⁄° *
fmt
, ...);

16 
vssˇnf
(c⁄° * 
buf
, c⁄° * 
fmt
, 
va_li°
 
¨gs
);

17 
ssˇnf
(c⁄° * 
buf
, c⁄° * 
fmt
, ...);

19 
putc
(
c
);

20 
gëc
();

22 
¥ötf
(c⁄° *
fmt
, ...);

23 
sˇnf
(c⁄° * 
fmt
, ...);

	@include/string.h

8 
	~"ty≥s.h
"

10 * 
___°πok
;

11 * 
°Ωbrk
(const *,const *);

12 * 
°πok
(*,const *);

13 * 
°r£p
(**,const *);

14 
size_t
 
°r•n
(const *,const *);

16 
puts
(c⁄° *
s
);

17 
putch¨
(
c
);

24 #i‚de‡
__HAVE_ARCH_STRCPY


25 * 
°r˝y
(*,const *);

27 #i‚de‡
__HAVE_ARCH_STRNCPY


28 * 
°∫˝y
(*,c⁄° *, 
size_t
);

30 #i‚de‡
__HAVE_ARCH_STRCAT


31 * 
°rˇt
(*, const *);

33 #i‚de‡
__HAVE_ARCH_STRNCAT


34 * 
°∫ˇt
(*, c⁄° *, 
size_t
);

36 #i‚de‡
__HAVE_ARCH_STRCMP


37 
°rcmp
(const *,const *);

39 #i‚de‡
__HAVE_ARCH_STRNCMP


40 
°∫cmp
(c⁄° *,c⁄° *,
size_t
);

42 #i‚de‡
__HAVE_ARCH_STRNICMP


43 
°∫icmp
(c⁄° *, c⁄° *, 
size_t
);

45 #i‚de‡
__HAVE_ARCH_STRCHR


46 * 
°rchr
(const *,);

48 #i‚de‡
__HAVE_ARCH_STRRCHR


49 * 
°ºchr
(const *,);

51 #i‚de‡
__HAVE_ARCH_STRSTR


52 * 
°r°r
(const *,const *);

54 #i‚de‡
__HAVE_ARCH_STRLEN


55 
size_t
 
°æí
(const *);

57 #i‚de‡
__HAVE_ARCH_STRNLEN


58 
size_t
 
°∫Àn
(const *,size_t);

61 #i‚de‡
__HAVE_ARCH_MEMSET


62 * 
mem£t
(*,,
size_t
);

64 #i‚de‡
__HAVE_ARCH_MEMCPY


65 * 
mem˝y
(*,c⁄° *,
size_t
);

67 #i‚de‡
__HAVE_ARCH_MEMMOVE


68 * 
memmove
(*,c⁄° *,
size_t
);

70 #i‚de‡
__HAVE_ARCH_MEMSCAN


71 * 
memsˇn
(*,,
size_t
);

73 #i‚de‡
__HAVE_ARCH_MEMCMP


74 
memcmp
(c⁄° *,c⁄° *,
size_t
);

76 #i‚de‡
__HAVE_ARCH_MEMCHR


77 * 
memchr
(c⁄° *,,
size_t
);

	@include/system.h

1 #i‚de‡
__ASM_ARM_SYSTEM_H


2 
	#__ASM_ARM_SYSTEM_H


	)

4 #ifde‡
__KERNEL__


6 
	~<löux/c⁄fig.h
>

8 
	#CPU_ARCH_UNKNOWN
 0

	)

9 
	#CPU_ARCH_ARMv3
 1

	)

10 
	#CPU_ARCH_ARMv4
 2

	)

11 
	#CPU_ARCH_ARMv4T
 3

	)

12 
	#CPU_ARCH_ARMv5
 4

	)

13 
	#CPU_ARCH_ARMv5T
 5

	)

14 
	#CPU_ARCH_ARMv5TE
 6

	)

15 
	#CPU_ARCH_ARMv5TEJ
 7

	)

16 
	#CPU_ARCH_ARMv6
 8

	)

21 
	#CR_M
 (1 << 0Ë

	)

22 
	#CR_A
 (1 << 1Ë

	)

23 
	#CR_C
 (1 << 2Ë

	)

24 
	#CR_W
 (1 << 3Ë

	)

25 
	#CR_P
 (1 << 4Ë

	)

26 
	#CR_D
 (1 << 5Ë

	)

27 
	#CR_L
 (1 << 6Ë

	)

28 
	#CR_B
 (1 << 7Ë

	)

29 
	#CR_S
 (1 << 8Ë

	)

30 
	#CR_R
 (1 << 9Ë

	)

31 
	#CR_F
 (1 << 10Ë

	)

32 
	#CR_Z
 (1 << 11Ë

	)

33 
	#CR_I
 (1 << 12Ë

	)

34 
	#CR_V
 (1 << 13Ë

	)

35 
	#CR_RR
 (1 << 14Ë

	)

36 
	#CR_L4
 (1 << 15Ë

	)

37 
	#CR_DT
 (1 << 16)

	)

38 
	#CR_IT
 (1 << 18)

	)

39 
	#CR_ST
 (1 << 19)

	)

40 
	#CR_FI
 (1 << 21Ë

	)

41 
	#CR_U
 (1 << 22Ë

	)

42 
	#CR_XP
 (1 << 23Ë

	)

43 
	#CR_VE
 (1 << 24Ë

	)

45 
	#CPUID_ID
 0

	)

46 
	#CPUID_CACHETYPE
 1

	)

47 
	#CPUID_TCM
 2

	)

48 
	#CPUID_TLBTYPE
 3

	)

50 
	#ªad_˝uid
(
ªg
) \

52 
__vÆ
; \

53 
	`asm
("mrcÖ15, 0, %0, c0, c0, " 
	`__°rögify
(
ªg
) \

54 : "Ù" (
__vÆ
) \

57 
__vÆ
; \

58 })

	)

68 
	#__asmeq
(
x
, 
y
Ë".i‚¯" x "," y " ; .î∏; .ídif\n\t"

	)

70 #i‚de‡
__ASSEMBLY__


72 
	~<löux/lökage.h
>

74 
	gthªad_öfo
;

75 
	gèsk_°ru˘
;

78 
sy°em_ªv
;

79 
sy°em_£rül_low
;

80 
sy°em_£rül_high
;

81 
mem_f˛k_21285
;

83 
	g±_ªgs
;

85 
	$dõ
(c⁄° *
msg
, 
±_ªgs
 *
ªgs
, 
îr
)

86 
	`__©åibuã__
((
n‹ëu∫
));

88 
	`dõ_if_kî√l
(c⁄° *
°r
, 
±_ªgs
 *
ªgs
, 
îr
);

90 
	`hook_Áu…_code
(
ƒ
, (*
‚
)(, ,

91 
±_ªgs
 *),

92 
sig
, c⁄° *
«me
);

94 
	~<asm/¥oc-‚s.h
>

96 
	#xchg
(
±r
,
x
) \

97 ((
	`__ty≥of__
(*(
±r
)))
	`__xchg
(()(
x
),’å),(*’å))))

	)

99 
	#ès
(
±r
Ë(
	`xchg
(’å),1))

	)

101 
asmlökage
 
	`__backåa˚
();

103 
	`˝u_¨chôe˘uª
();

105 
	#£t_¸
(
x
) \

106 
__asm__
 
	`__vﬁ©ûe__
( \

108 : : "r" (
x
Ë: "cc")

	)

110 
	#gë_¸
() \

112 
__vÆ
; \

113 
__asm__
 
	`__vﬁ©ûe__
( \

115 : "Ù" (
__vÆ
) : : "cc"); \

116 
__vÆ
; \

117 
	}
})

	)

119 
¸_no_Æignmít
;

120 
¸_Æignmít
;

122 
	#UDBG_UNDEFINED
 (1 << 0)

	)

123 
	#UDBG_SYSCALL
 (1 << 1)

	)

124 
	#UDBG_BADABORT
 (1 << 2)

	)

125 
	#UDBG_SEGV
 (1 << 3)

	)

126 
	#UDBG_BUS
 (1 << 4)

	)

128 
u£r_debug
;

130 #i‡
__LINUX_ARM_ARCH__
 >= 4

131 
	#ve˘‹s_high
(Ë(
¸_Æignmít
 & 
CR_V
)

	)

133 
	#ve˘‹s_high
(Ë(0)

	)

136 
	#mb
(Ë
__asm__
 
	`__vﬁ©ûe__
 ("" : : : "mem‹y")

	)

137 
	#rmb
(Ë
	`mb
()

	)

138 
	#wmb
(Ë
	`mb
()

	)

139 
	#ªad_b¨rõr_dïíds
(Ëdÿ{ } 0)

	)

140 
	#£t_mb
(
v¨
, 
vÆue
Ëdÿ{ v¨ = vÆue; 
	`mb
(); } 0)

	)

141 
	#£t_wmb
(
v¨
, 
vÆue
Ëdÿ{ v¨ = vÆue; 
	`wmb
(); } 0)

	)

142 
	#n›
(Ë
__asm__
 
	`__vﬁ©ûe__
("mov\å0,r0\t@Ç›\n\t");

	)

144 #ifde‡
CONFIG_SMP


151 
	#¥ï¨e_¨ch_swôch
(
rq
,
√xt
) \

153 
	`•ö_lock
(&(
√xt
)->
swôch_lock
); \

154 
	`•ö_u∆ock_úq
(&(
rq
)->
lock
); \

155 } 0)

	)

157 
	#föish_¨ch_swôch
(
rq
,
¥ev
) \

158 
	`•ö_u∆ock
(&(
¥ev
)->
swôch_lock
)

	)

160 
	#èsk_ru¬ög
(
rq
,
p
) \

161 ((
rq
)->
cuº
 =(
p
Ë|| 
	`•ö_is_locked
(&’)->
swôch_lock
))

	)

168 
	#¥ï¨e_¨ch_swôch
(
rq
,
√xt
Ë
	`loˇl_úq_íabÀ
()

	)

169 
	#föish_¨ch_swôch
(
rq
,
¥ev
Ë
	`•ö_u∆ock
(&‘q)->
lock
)

	)

170 
	#èsk_ru¬ög
(
rq
,
p
Ë(‘q)->
cuº
 =’))

	)

178 
èsk_°ru˘
 *
__swôch_to
(èsk_°ru˘ *, 
thªad_öfo
 *, thread_info *);

180 
	#swôch_to
(
¥ev
,
√xt
,
œ°
) \

182 
œ°
 = 
	`__swôch_to
(
¥ev
,¥ev->
thªad_öfo
,
√xt
->thread_info); \

183 } 0)

	)

188 #i‡
__LINUX_ARM_ARCH__
 >= 6

190 
	#loˇl_úq_ßve
(
x
) \

192 
__asm__
 
	`__vﬁ©ûe__
( \

195 : "Ù" (
x
) : : "memory", "cc"); \

196 })

	)

198 
	#loˇl_úq_íabÀ
(Ë
	`__asm__
("˝sõ i @ __°i" : : : "mem‹y", "cc")

	)

199 
	#loˇl_úq_dißbÀ
(Ë
	`__asm__
("˝sid i @ __˛i" : : : "mem‹y", "cc")

	)

200 
	#loˇl_fiq_íabÀ
(Ë
	`__asm__
("˝sõ f @ __°f" : : : "mem‹y", "cc")

	)

201 
	#loˇl_fiq_dißbÀ
(Ë
	`__asm__
("˝sid f @ __˛f" : : : "mem‹y", "cc")

	)

208 
	#loˇl_úq_ßve
(
x
) \

210 
ãmp
; \

211 (Ë(&
ãmp
 =&
x
); \

212 
__asm__
 
	`__vﬁ©ûe__
( \

216 : "Ù" (
x
), "Ù" (
ãmp
) \

219 })

	)

224 
	#loˇl_úq_íabÀ
() \

226 
ãmp
; \

227 
__asm__
 
	`__vﬁ©ûe__
( \

231 : "Ù" (
ãmp
) \

234 })

	)

239 
	#loˇl_úq_dißbÀ
() \

241 
ãmp
; \

242 
__asm__
 
	`__vﬁ©ûe__
( \

246 : "Ù" (
ãmp
) \

249 })

	)

254 
	#loˇl_fiq_íabÀ
() \

256 
ãmp
; \

257 
__asm__
 
	`__vﬁ©ûe__
( \

261 : "Ù" (
ãmp
) \

264 })

	)

269 
	#loˇl_fiq_dißbÀ
() \

271 
ãmp
; \

272 
__asm__
 
	`__vﬁ©ûe__
( \

276 : "Ù" (
ãmp
) \

279 })

	)

286 
	#loˇl_ßve_Êags
(
x
) \

288 
__asm__
 
	`__vﬁ©ûe__
( \

290 : "Ù" (
x
) : : "memory", "cc"); \

291 })

	)

296 
	#loˇl_úq_ª°‹e
(
x
) \

297 
__asm__
 
	`__vﬁ©ûe__
( \

300 : "r" (
x
) \

301 : "mem‹y", "cc")

	)

303 
	#úqs_dißbÀd
() \

305 
Êags
; \

306 
	`loˇl_ßve_Êags
(
Êags
); \

307 
Êags
 & 
PSR_I_BIT
; \

308 })

	)

310 #ifde‡
CONFIG_SMP


311 #îr‹ 
SMP
 
nŸ
 
suµ‹ãd


313 
	#smp_mb
(Ë
	`mb
()

	)

314 
	#smp_rmb
(Ë
	`rmb
()

	)

315 
	#smp_wmb
(Ë
	`wmb
()

	)

316 
	#smp_ªad_b¨rõr_dïíds
(Ë
	`ªad_b¨rõr_dïíds
()

	)

320 
	#smp_mb
(Ë
	`b¨rõr
()

	)

321 
	#smp_rmb
(Ë
	`b¨rõr
()

	)

322 
	#smp_wmb
(Ë
	`b¨rõr
()

	)

323 
	#smp_ªad_b¨rõr_dïíds
(Ëdÿ{ } 0)

	)

325 #i‡
deföed
(
CONFIG_CPU_SA1100
Ë|| deföed(
CONFIG_CPU_SA110
)

338 
	#swp_is_buggy


	)

341 
ölöe
 
	$__xchg
(
x
, vﬁ©ûê*
±r
, 
size
)

343 
	`__bad_xchg
(volatile *, );

344 
ªt
;

345 #ifde‡
swp_is_buggy


346 
Êags
;

349 
size
) {

350 #ifde‡
swp_is_buggy


352 
	`loˇl_úq_ßve
(
Êags
);

353 
ªt
 = *(vﬁ©ûê*)
±r
;

354 *(vﬁ©ûê*)
±r
 = 
x
;

355 
	`loˇl_úq_ª°‹e
(
Êags
);

359 
	`loˇl_úq_ßve
(
Êags
);

360 
ªt
 = *(vﬁ©ûê*)
±r
;

361 *(vﬁ©ûê*)
±r
 = 
x
;

362 
	`loˇl_úq_ª°‹e
(
Êags
);

365 1: 
__asm__
 
	`__vﬁ©ûe__
 ("swpb %0, %1, [%2]"

366 : "=&r" (
ªt
)

367 : "r" (
x
), "r" (
±r
)

370 4: 
__asm__
 
	`__vﬁ©ûe__
 ("swp %0, %1, [%2]"

371 : "=&r" (
ªt
)

372 : "r" (
x
), "r" (
±r
)

376 : 
	`__bad_xchg
(
±r
, 
size
), 
ªt
 = 0;

379  
ªt
;

380 
	}
}

	@include/types.h

2 #i‚de‡
_TPYES_H


3 
	#_TPYES_H


	)

5 #i‚de‡
NULL


6 
	#NULL
 0

	)

9 #i‚de‡
UINT32


10 
	#UINT32
 

	)

13 #i‚de‡
UINT16


14 
	#UINT16
 

	)

17 #i‚de‡
UINT8


18 
	#UINT8
 

	)

21 #i‚de‡
_SIZE_T


22 
	#_SIZE_T


	)

23 
	tsize_t
;

	@init.c

5 
	~"s3c24xx.h
"

7 
dißbÀ_w©ch_dog
();

8 
˛ock_öô
();

9 
mem£tup
();

10 
c›y_°ïpög°⁄e_to_sdøm
();

11 
˛ón_bss
();

16 
	$dißbÀ_w©ch_dog
()

18 
WTCON
 = 0;

19 
	}
}

21 
	#FCLK
 200000000

	)

22 
	#HCLK
 100000000

	)

23 
	#PCLK
 50000000

	)

24 
	#S3C2410_MPLL_200MHZ
 ((0x5c<<12)|(0x04<<4)|(0x00))

	)

25 
	#S3C2440_MPLL_200MHZ
 ((0x5c<<12)|(0x01<<4)|(0x02))

	)

36 
	$˛ock_öô
()

39 
CLKDIVN
 = 0x03;

42 
	`__asm__
(

49 i‡((
GSTATUS1
 == 0x32410000) || (GSTATUS1 == 0x32410002))

51 
MPLLCON
 = 
S3C2410_MPLL_200MHZ
;

55 
MPLLCON
 = 
S3C2440_MPLL_200MHZ
;

57 
	}
}

62 
	$mem£tup
()

64 vﬁ©ûê*
p
 = (vﬁ©ûê*)
MEM_CTL_BASE
;

71 
p
[0] = 0x22011110;

72 
p
[1] = 0x00000700;

73 
p
[2] = 0x00000700;

74 
p
[3] = 0x00000700;

75 
p
[4] = 0x00000700;

76 
p
[5] = 0x00000700;

77 
p
[6] = 0x00000700;

78 
p
[7] = 0x00018005;

79 
p
[8] = 0x00018005;

85 
p
[9] = 0x008C04F4;

86 
p
[10] = 0x000000B1;

87 
p
[11] = 0x00000030;

88 
p
[12] = 0x00000030;

89 
	}
}

91 
	$c›y_°ïpög°⁄e_to_sdøm
()

93 *
pdwSrc
 = (*)0;

94 *
pdwDe°
 = (*)0x30000000;

96 
pdwSrc
 < (*)4096)

98 *
pdwDe°
 = *
pdwSrc
;

99 
pdwDe°
++;

100 
pdwSrc
++;

102 
	}
}

104 
	$˛ón_bss
()

106 
__bss_°¨t
, 
__bss_íd
;

107 *
p
 = &
__bss_°¨t
;

109 ; 
p
 < &
__bss_íd
;Ö++)

110 *
p
 = 0;

111 
	}
}

113 
	$C›yCode2SDRAM
(*
buf
, 
°¨t_addr
, 
size
)

115 
	`«nd_ªad
(*
buf
, 
°¨t_addr
, 
size
);

116 
	`«nd_ªad
(
buf
, 
°¨t_addr
, 
size
);

118 
	}
}

	@interrupt.c

1 
	~"s3c24xx.h
"

5 (*
i§_h™dÀ_¨øy
[50])();

7 
	$Dummy_i§
()

10 
	}
}

12 
	$öô_úq
()

14 
i
 = 0;

15 
i
 = 0; i < (
i§_h™dÀ_¨øy
) / (isr_handle_array[0]); i++)

17 
i§_h™dÀ_¨øy
[
i
] = 
Dummy_i§
;

20 
INTMOD
 = 0x0;

21 
INTMSK
 = 
BIT_ALLMSK
;

24 
	}
}

26 
	$IRQ_H™dÀ
()

28 
o·
 = 
INTOFFSET
;

31 i‡(
o·
 == 4)

32 
EINTPEND
 = 1<<7;

33 
SRCPND
 = 1<<
o·
;

34 
INTPND
 = INTPND;

37 
i§_h™dÀ_¨øy
[
o·
]();

38 
	}
}

	@interrupt.h

1 
EINT_H™dÀ
();

	@lcddrv.c

6 
	~<°dio.h
>

7 
	~"s3c24xx.h
"

8 
	~"lcddrv.h
"

10 
	gfb_ba£_addr
;

11 
	gbµ
;

12 
	gxsize
;

13 
	gysize
;

15 c⁄° 
	gDEMO256∑l
[]={

25 
	$Lcd_P‹t_Inô
()

27 
GPCUP
 = 0xffffffff;

28 
GPCCON
 = 0xaaaaaaaa;

29 
GPDUP
 = 0xffffffff;

30 
GPDCON
 = 0xaaaaaaaa;

31 
	`¥ötf
("Initializing GPIOÖorts..........\n");

32 
	}
}

43 
	$T·_Lcd_Inô
(
ty≥
)

45 
ty≥
)

47 
MODE_TFT_8BIT_240320
:

69 
LCDCON1
 = (
CLKVAL_TFT_240320
<<8Ë| (
LCDTYPE_TFT
<<5) | \

70 (
BPPMODE_8BPP
<<1Ë| (
ENVID_DISABLE
<<0);

71 
LCDCON2
 = (
VBPD_240320
<<24Ë| (
LINEVAL_TFT_240320
<<14) | \

72 (
VFPD_240320
<<6Ë| (
VSPW_240320
);

73 
LCDCON3
 = (
HBPD_240320
<<19Ë| (
HOZVAL_TFT_240320
<<8Ë| (
HFPD_240320
);

74 
LCDCON4
 = 
HSPW_240320
;

75 
LCDCON5
 = (
FORMAT8BPP_565
<<11Ë| (
HSYNC_INV
<<9Ë| (
VSYNC_INV
<<8) | \

76 (
BSWP
<<1);

93 
LCDSADDR1
 = ((
LCDFRAMEBUFFER
>>22)<<21Ë| 
	`LOWER21BITS
(LCDFRAMEBUFFER>>1);

94 
LCDSADDR2
 = 
	`LOWER21BITS
((
LCDFRAMEBUFFER
+ \

95 (
LINEVAL_TFT_240320
+1)*(
HOZVAL_TFT_240320
+1)*1)>>1);

96 
LCDSADDR3
 = (0<<11Ë| (
LCD_XSIZE_TFT_240320
/2);

99 
TPAL
 = 0;

101 
fb_ba£_addr
 = 
LCDFRAMEBUFFER
;

102 
bµ
 = 8;

103 
xsize
 = 240;

104 
ysize
 = 320;

108 
MODE_TFT_16BIT_240320
:

130 
LCDCON1
 = (
CLKVAL_TFT_240320
<<8Ë| (
LCDTYPE_TFT
<<5) | \

131 (
BPPMODE_16BPP
<<1Ë| (
ENVID_DISABLE
<<0);

132 
LCDCON2
 = (
VBPD_240320
<<24Ë| (
LINEVAL_TFT_240320
<<14) | \

133 (
VFPD_240320
<<6Ë| (
VSPW_240320
);

134 
LCDCON3
 = (
HBPD_240320
<<19Ë| (
HOZVAL_TFT_240320
<<8Ë| (
HFPD_240320
);

135 
LCDCON4
 = 
HSPW_240320
;

136 
LCDCON5
 = (
FORMAT8BPP_565
<<11Ë| (
HSYNC_INV
<<9Ë| (
VSYNC_INV
<<8) | \

137 (
HWSWP
<<1);

154 
LCDSADDR1
 = ((
LCDFRAMEBUFFER
>>22)<<21Ë| 
	`LOWER21BITS
(LCDFRAMEBUFFER>>1);

155 
LCDSADDR2
 = 
	`LOWER21BITS
((
LCDFRAMEBUFFER
+ \

156 (
LINEVAL_TFT_240320
+1)*(
HOZVAL_TFT_240320
+1)*2)>>1);

157 
LCDSADDR3
 = (0<<11Ë| (
LCD_XSIZE_TFT_240320
*2/2);

160 
TPAL
 = 0;

162 
fb_ba£_addr
 = 
LCDFRAMEBUFFER
;

163 
bµ
 = 16;

164 
xsize
 = 240;

165 
ysize
 = 320;

169 
MODE_TFT_8BIT_640480
:

191 
LCDCON1
 = (
CLKVAL_TFT_640480
<<8Ë| (
LCDTYPE_TFT
<<5) | \

192 (
BPPMODE_8BPP
<<1Ë| (
ENVID_DISABLE
<<0);

193 
LCDCON2
 = (
VBPD_640480
<<24Ë| (
LINEVAL_TFT_640480
<<14) | \

194 (
VFPD_640480
<<6Ë| (
VSPW_640480
);

195 
LCDCON3
 = (
HBPD_640480
<<19Ë| (
HOZVAL_TFT_640480
<<8Ë| (
HFPD_640480
);

196 
LCDCON4
 = 
HSPW_640480
;

197 
LCDCON5
 = (
FORMAT8BPP_565
<<11Ë| (
HSYNC_INV
<<9Ë| (
VSYNC_INV
<<8) | \

198 (
BSWP
<<1);

215 
LCDSADDR1
 = ((
LCDFRAMEBUFFER
>>22)<<21Ë| 
	`LOWER21BITS
(LCDFRAMEBUFFER>>1);

216 
LCDSADDR2
 = 
	`LOWER21BITS
((
LCDFRAMEBUFFER
+ \

217 (
LINEVAL_TFT_640480
+1)*(
HOZVAL_TFT_640480
+1)*1)>>1);

218 
LCDSADDR3
 = (0<<11Ë| (
LCD_XSIZE_TFT_640480
/2);

221 
TPAL
 = 0;

223 
fb_ba£_addr
 = 
LCDFRAMEBUFFER
;

224 
bµ
 = 8;

225 
xsize
 = 640;

226 
ysize
 = 480;

230 
MODE_TFT_16BIT_640480
:

252 
LCDCON1
 = (
CLKVAL_TFT_640480
<<8Ë| (
LCDTYPE_TFT
<<5) | \

253 (
BPPMODE_16BPP
<<1Ë| (
ENVID_DISABLE
<<0);

254 
LCDCON2
 = (
VBPD_640480
<<24Ë| (
LINEVAL_TFT_640480
<<14) | \

255 (
VFPD_640480
<<6Ë| (
VSPW_640480
);

256 
LCDCON3
 = (
HBPD_640480
<<19Ë| (
HOZVAL_TFT_640480
<<8Ë| (
HFPD_640480
);

257 
LCDCON4
 = 
HSPW_640480
;

258 
LCDCON5
 = (
FORMAT8BPP_565
<<11Ë| (
HSYNC_INV
<<9Ë| (
VSYNC_INV
<<8) | \

259 (
HWSWP
<<1);

276 
LCDSADDR1
 = ((
LCDFRAMEBUFFER
>>22)<<21Ë| 
	`LOWER21BITS
(LCDFRAMEBUFFER>>1);

277 
LCDSADDR2
 = 
	`LOWER21BITS
((
LCDFRAMEBUFFER
+ \

278 (
LINEVAL_TFT_640480
+1)*(
HOZVAL_TFT_640480
+1)*2)>>1);

279 
LCDSADDR3
 = (0<<11Ë| (
LCD_XSIZE_TFT_640480
*2/2);

282 
TPAL
 = 0;

284 
fb_ba£_addr
 = 
LCDFRAMEBUFFER
;

285 
bµ
 = 16;

286 
xsize
 = 640;

287 
ysize
 = 480;

294 
	}
}

299 
	$Lcd_PÆëã8Bô_Inô
()

301 
i
;

302 vﬁ©ûê*
∑Àâe
;

304 
LCDCON5
 |(
FORMAT8BPP_565
<<11);

306 
∑Àâe
 = (vﬁ©ûê*)
PALETTE
;

307 
i
 = 0; i < 256; i++)

308 *
∑Àâe
++ = 
DEMO256∑l
[
i
];

309 
	}
}

316 
	$Ch™gePÆëã
(
UINT32
 
cﬁ‹
)

318 
i
;

319 
ªd
, 
gªí
, 
blue
;

320 
UINT32
 *
∑Àâe
;

322 
∑Àâe
=(
UINT32
 *)
PALETTE
;

323 
i
 = 0; i < 256; i++)

325 
ªd
 = (
cﬁ‹
 >> 19) & 0xff;

326 
gªí
 = (
cﬁ‹
 >> 10) & 0xff;

327 
blue
 = (
cﬁ‹
 >> 3) & 0xff;

328 
cﬁ‹
 = (
ªd
 << 11Ë| (
gªí
 << 5Ë| 
blue
;

330 (
LCDCON5
>>16) == 2);

331 *
∑Àâe
++ = 
cﬁ‹
;

333 
	}
}

343 
	$Lcd_PowîE«bÀ
(
övpwªn
, 
pwªn
)

345 
GPGCON
 = (GPGCON & (~(3<<8))) | (3<<8);

346 
GPGUP
 = (GPGUP & (~(1<<4))) | (1<<4);

348 
LCDCON5
 = (LCDCON5 & (~(1<<5))Ë| (
övpwªn
<<5);

349 
LCDCON5
 = (LCDCON5 & (~(1<<3))Ë| (
pwªn
<<3);

350 
	}
}

359 
	$Lcd_EnvidOnOff
(
⁄off
)

361 i‡(
⁄off
 == 1)

362 
LCDCON1
 |= 1;

364 
LCDCON1
 &= 0x3fffe;

365 
	}
}

372 
	$CÀ¨S¸WôhTmpP…
(
UINT32
 
cﬁ‹
)

374 
TPAL
 = (1<<24)|((
cﬁ‹
 & 0xffffff)<<0);

375 
	}
}

380 
	$DißbÀTmpP…
()

382 
TPAL
 = 0;

383 
	}
}

	@lcddrv.h

6 #i‚de‡
__LCDDRV_H__


7 
	#__LCDDRV_H__


	)

9 
	~<ty≥s.h
>

11 
	#LOWER21BITS
(
n
Ë(“Ë& 0x1fffff)

	)

13 
	#BPPMODE_1BPP
 0x8

	)

14 
	#BPPMODE_2BPP
 0x9

	)

15 
	#BPPMODE_4BPP
 0xA

	)

16 
	#BPPMODE_8BPP
 0xB

	)

17 
	#BPPMODE_16BPP
 0xC

	)

18 
	#BPPMODE_24BPP
 0xD

	)

20 
	#LCDTYPE_TFT
 0x3

	)

22 
	#ENVID_DISABLE
 0

	)

23 
	#ENVID_ENABLE
 1

	)

25 
	#FORMAT8BPP_5551
 0

	)

26 
	#FORMAT8BPP_565
 1

	)

28 
	#HSYNC_NORM
 0

	)

29 
	#HSYNC_INV
 1

	)

31 
	#VSYNC_NORM
 0

	)

32 
	#VSYNC_INV
 1

	)

34 
	#BSWP
 1

	)

35 
	#HWSWP
 1

	)

38 
	#MODE_TFT_1BIT_240320
 (0x4101)

	)

39 
	#MODE_TFT_8BIT_240320
 (0x4102)

	)

40 
	#MODE_TFT_16BIT_240320
 (0x4104)

	)

41 
	#MODE_TFT_24BIT_240320
 (0x4108)

	)

44 
	#LCD_XSIZE_TFT_240320
 (240)

	)

45 
	#LCD_YSIZE_TFT_240320
 (320)

	)

48 
	#HOZVAL_TFT_240320
 (
LCD_XSIZE_TFT_240320
-1)

	)

49 
	#LINEVAL_TFT_240320
 (
LCD_YSIZE_TFT_240320
-1)

	)

51 
	#CLKVAL_TFT_240320
 (4)

	)

56 
	#VBPD_240320
 ((2-1)&0xff)

	)

57 
	#VFPD_240320
 ((6-1)&0xff)

	)

58 
	#VSPW_240320
 ((2-1Ë&0x3f)

	)

59 
	#HBPD_240320
 ((37-1)&0x7f)

	)

60 
	#HFPD_240320
 ((20-1)&0xff)

	)

61 
	#HSPW_240320
 ((6-1)&0xff)

	)

66 
	#MODE_TFT_1BIT_640480
 (0x4201)

	)

67 
	#MODE_TFT_8BIT_640480
 (0x4202)

	)

68 
	#MODE_TFT_16BIT_640480
 (0x4204)

	)

69 
	#MODE_TFT_24BIT_640480
 (0x4208)

	)

72 
	#LCD_XSIZE_TFT_640480
 (640)

	)

73 
	#LCD_YSIZE_TFT_640480
 (480)

	)

76 
	#HOZVAL_TFT_640480
 (
LCD_XSIZE_TFT_640480
-1)

	)

77 
	#LINEVAL_TFT_640480
 (
LCD_YSIZE_TFT_640480
-1)

	)

80 
	#VBPD_640480
 ((33-1)&0xff)

	)

81 
	#VFPD_640480
 ((10-1)&0xff)

	)

82 
	#VSPW_640480
 ((2-1Ë&0x3f)

	)

83 
	#HBPD_640480
 ((48-1)&0x7f)

	)

84 
	#HFPD_640480
 ((16-1)&0xff)

	)

85 
	#HSPW_640480
 ((96-1)&0xff)

	)

88 
	#CLKVAL_TFT_640480
 (1)

	)

94 
	#LCDFRAMEBUFFER
 0x30400000

	)

99 
Lcd_P‹t_Inô
();

108 
T·_Lcd_Inô
(
ty≥
);

113 
Lcd_PÆëã8Bô_Inô
();

122 
Lcd_EnvidOnOff
(
⁄off
);

132 
Lcd_PowîE«bÀ
(
övpwªn
, 
pwªn
);

139 
CÀ¨S¸WôhTmpP…
(
UINT32
 
cﬁ‹
);

144 
DißbÀTmpP…
();

151 
Ch™gePÆëã
(
UINT32
 
cﬁ‹
);

	@lcdlib.c

6 
	~<°dio.h
>

7 
	~"lcddrv.h
"

8 
	~"‰amebuf„r.h
"

14 
	$Te°_Lcd_T·_8Bô_240320
()

16 
	`Lcd_P‹t_Inô
();

17 
	`T·_Lcd_Inô
(
MODE_TFT_8BIT_240320
);

18 
	`Lcd_PowîE«bÀ
(0, 1);

19 
	`Lcd_EnvidOnOff
(1);

21 
	`Lcd_PÆëã8Bô_Inô
();

22 
	`CÀ¨S¸
(0x0);

23 
	`¥ötf
("[TFT 64K COLOR(16bpp) LCD TEST]\n");

25 
	`¥ötf
("1. Pressány keyÅo drawÜine\n");

26 
	`gëc
();

27 
	`DøwLöe
(0 , 0 , 239, 0 , 0);

28 
	`DøwLöe
(0 , 0 , 0 , 319, 1);

29 
	`DøwLöe
(239, 0 , 239, 319, 2);

30 
	`DøwLöe
(0 , 319, 239, 319, 4);

31 
	`DøwLöe
(0 , 0 , 239, 319, 8);

32 
	`DøwLöe
(239, 0 , 0 , 319, 16);

33 
	`DøwLöe
(120, 0 , 120, 319, 32);

34 
	`DøwLöe
(0 , 160, 239, 160, 64);

36 
	`¥ötf
("2. Pressány keyÅo draw circles\n");

37 
	`gëc
();

38 
	`Múe
();

40 
	`¥ötf
("3. Pressány keyÅo fillÅhe screem with one color\n");

41 
	`gëc
();

42 
	`CÀ¨S¸
(128);

44 
	`¥ötf
("4. Pressány keyÅo fillÅhe screem byÅemporaryÖalette\n");

45 
	`gëc
();

46 
	`CÀ¨S¸WôhTmpP…
(0x0000ff);

48 
	`¥ötf
("5. Pressány keyÅo fillÅhe screem byÖalette\n");

49 
	`gëc
();

50 
	`DißbÀTmpP…
();

51 
	`Ch™gePÆëã
(0xffff00);

53 
	`¥ötf
("6. Pressány key stopÅheÅesting\n");

54 
	`gëc
();

55 
	`Lcd_EnvidOnOff
(0);

56 
	}
}

61 
	$Te°_Lcd_T·_16Bô_240320
()

63 
	`Lcd_P‹t_Inô
();

64 
	`T·_Lcd_Inô
(
MODE_TFT_16BIT_240320
);

65 
	`Lcd_PowîE«bÀ
(0, 1);

66 
	`Lcd_EnvidOnOff
(1);

68 
	`CÀ¨S¸
(0x0);

69 
	`¥ötf
("[TFT 64K COLOR(16bpp) LCD TEST]\n");

71 
	`¥ötf
("1. Pressány keyÅo drawÜine\n");

72 
	`gëc
();

73 
	`DøwLöe
(0 , 0 , 239, 0 , 0xff0000);

74 
	`DøwLöe
(0 , 0 , 0 , 319, 0x00ff00);

75 
	`DøwLöe
(239, 0 , 239, 319, 0x0000ff);

76 
	`DøwLöe
(0 , 319, 239, 319, 0xffffff);

77 
	`DøwLöe
(0 , 0 , 239, 319, 0xffff00);

78 
	`DøwLöe
(239, 0 , 0 , 319, 0x8000ff);

79 
	`DøwLöe
(120, 0 , 120, 319, 0xe6e8fa);

80 
	`DøwLöe
(0 , 160, 239, 160, 0xcd7f32);

82 
	`¥ötf
("2. Pressány keyÅo draw circles\n");

83 
	`gëc
();

84 
	`Múe
();

86 
	`¥ötf
("3. Pressány keyÅo fillÅhe screem with one color\n");

87 
	`gëc
();

88 
	`CÀ¨S¸
(0xff0000);

90 
	`¥ötf
("4. Pressány keyÅo fillÅhe screem byÅemporaryÖalette\n");

91 
	`gëc
();

92 
	`CÀ¨S¸WôhTmpP…
(0x0000ff);

94 
	`¥ötf
("5. Pressány key stopÅheÅesting\n");

95 
	`gëc
();

96 
	`Lcd_EnvidOnOff
(0);

97 
	}
}

103 
	$Te°_Lcd_T·_8Bô_640480
()

105 
	`Lcd_P‹t_Inô
();

106 
	`T·_Lcd_Inô
(
MODE_TFT_8BIT_640480
);

107 
	`Lcd_PowîE«bÀ
(0, 1);

108 
	`Lcd_EnvidOnOff
(1);

110 
	`Lcd_PÆëã8Bô_Inô
();

111 
	`CÀ¨S¸
(0x0);

112 
	`¥ötf
("[TFT 64K COLOR(16bpp) LCD TEST]\n");

114 
	`¥ötf
("1. Pressány keyÅo drawÜine\n");

115 
	`gëc
();

116 
	`DøwLöe
(0 , 0 , 639, 0 , 0);

117 
	`DøwLöe
(0 , 0 , 0 , 479, 1);

118 
	`DøwLöe
(639, 0 , 639, 479, 2);

119 
	`DøwLöe
(0 , 479, 639, 479, 4);

120 
	`DøwLöe
(0 , 0 , 639, 479, 8);

121 
	`DøwLöe
(639, 0 , 0 , 479, 16);

122 
	`DøwLöe
(320, 0 , 320, 479, 32);

123 
	`DøwLöe
(0 , 240, 639, 240, 64);

125 
	`¥ötf
("2. Pressány keyÅo draw circles\n");

126 
	`gëc
();

127 
	`Múe
();

129 
	`¥ötf
("3. Pressány keyÅo fillÅhe screem with one color\n");

130 
	`gëc
();

131 
	`CÀ¨S¸
(128);

133 
	`¥ötf
("4. Pressány keyÅo fillÅhe screem byÅemporaryÖalette\n");

134 
	`gëc
();

135 
	`CÀ¨S¸WôhTmpP…
(0x0000ff);

137 
	`¥ötf
("5. Pressány keyÅo fillÅhe screem byÖalette\n");

138 
	`gëc
();

139 
	`DißbÀTmpP…
();

140 
	`Ch™gePÆëã
(0xffff00);

142 
	`¥ötf
("6. Pressány key stopÅheÅesting\n");

143 
	`gëc
();

144 
	`Lcd_EnvidOnOff
(0);

145 
	}
}

150 
	$Te°_Lcd_T·_16Bô_640480
()

152 
	`Lcd_P‹t_Inô
();

153 
	`T·_Lcd_Inô
(
MODE_TFT_16BIT_640480
);

154 
	`Lcd_PowîE«bÀ
(0, 1);

155 
	`Lcd_EnvidOnOff
(1);

157 
	`CÀ¨S¸
(0x0);

158 
	`¥ötf
("[TFT 64K COLOR(16bpp) LCD TEST]\n");

160 
	`¥ötf
("1. Pressány keyÅo drawÜine\n");

161 
	`gëc
();

162 
	`DøwLöe
(0 , 0 , 639, 0 , 0xff0000);

163 
	`DøwLöe
(0 , 0 , 0 , 479, 0x00ff00);

164 
	`DøwLöe
(639, 0 , 639, 479, 0x0000ff);

165 
	`DøwLöe
(0 , 479, 639, 479, 0xffffff);

166 
	`DøwLöe
(0 , 0 , 639, 479, 0xffff00);

167 
	`DøwLöe
(639, 0 , 0 , 479, 0x8000ff);

168 
	`DøwLöe
(320, 0 , 320, 479, 0xe6e8fa);

169 
	`DøwLöe
(0 , 240, 639, 240, 0xcd7f32);

171 
	`¥ötf
("2. Pressány keyÅo draw circles\n");

172 
	`gëc
();

173 
	`Múe
();

175 
	`¥ötf
("3. Pressány keyÅo fillÅhe screem with one color\n");

176 
	`gëc
();

177 
	`CÀ¨S¸
(0xff0000);

179 
	`¥ötf
("4. Pressány keyÅo fillÅhe screem byÅemporaryÖalette\n");

180 
	`gëc
();

181 
	`CÀ¨S¸WôhTmpP…
(0x0000ff);

183 
	`¥ötf
("5. Pressány key stopÅheÅesting\n");

184 
	`gëc
();

185 
	`Lcd_EnvidOnOff
(0);

186 
	}
}

	@lcdlib.h

6 #i‚de‡
__LCDLIB_H__


7 
	#__LCDLIB_H__


	)

12 
Te°_Lcd_T·_8Bô_640480
();

17 
Te°_Lcd_T·_16Bô_640480
();

	@lib/ctype.c

7 
	~"˘y≥.h
"

9 
	g_˘y≥
[] = {

10 
_C
,_C,_C,_C,_C,_C,_C,_C,

11 
_C
,_C|
_S
,_C|_S,_C|_S,_C|_S,_C|_S,_C,_C,

12 
_C
,_C,_C,_C,_C,_C,_C,_C,

13 
_C
,_C,_C,_C,_C,_C,_C,_C,

14 
_S
|
_SP
,
_P
,_P,_P,_P,_P,_P,_P,

15 
_P
,_P,_P,_P,_P,_P,_P,_P,

16 
_D
,_D,_D,_D,_D,_D,_D,_D,

17 
_D
,_D,
_P
,_P,_P,_P,_P,_P,

18 
_P
,
_U
|
_X
,_U|_X,_U|_X,_U|_X,_U|_X,_U|_X,_U,

19 
_U
,_U,_U,_U,_U,_U,_U,_U,

20 
_U
,_U,_U,_U,_U,_U,_U,_U,

21 
_U
,_U,_U,
_P
,_P,_P,_P,_P,

22 
_P
,
_L
|
_X
,_L|_X,_L|_X,_L|_X,_L|_X,_L|_X,_L,

23 
_L
,_L,_L,_L,_L,_L,_L,_L,

24 
_L
,_L,_L,_L,_L,_L,_L,_L,

25 
_L
,_L,_L,
_P
,_P,_P,_P,
_C
,

28 
_S
|
_SP
,
_P
,_P,_P,_P,_P,_P,_P,_P,_P,_P,_P,_P,_P,_P,_P,

29 
_P
,_P,_P,_P,_P,_P,_P,_P,_P,_P,_P,_P,_P,_P,_P,_P,

30 
_U
,_U,_U,_U,_U,_U,_U,_U,_U,_U,_U,_U,_U,_U,_U,_U,

31 
_U
,_U,_U,_U,_U,_U,_U,
_P
,_U,_U,_U,_U,_U,_U,_U,
_L
,

32 
_L
,_L,_L,_L,_L,_L,_L,_L,_L,_L,_L,_L,_L,_L,_L,_L,

33 
_L
,_L,_L,_L,_L,_L,_L,
_P
,_L,_L,_L,_L,_L,_L,_L,_L};

	@lib/div64.h

1 #i‚de‡
__ASM_ARM_DIV64


2 
	#__ASM_ARM_DIV64


	)

22 #ifde‡
__ARMEB__


23 
	#__xh
 "r0"

	)

24 
	#__xl
 "r1"

	)

26 
	#__xl
 "r0"

	)

27 
	#__xh
 "r1"

	)

30 
	#__asmeq
(
x
, 
y
Ë".i‚¯" x "," y " ; .î∏; .ídif\n\t"

	)

32 
	#do_div
(
n
,
ba£
) \

34 
__ba£
 
	`asm
("r4"Ë
ba£
; \

35 
__n
 
	`asm
("r0"Ë
n
; \

36 
__ªs
 
	`asm
("r2"); \

37 
__ªm
 
	`asm
(
__xh
); \

38 
	`asm
–
	`__asmeq
("%0", 
__xh
) \

39 
	`__asmeq
("%1", "r2") \

40 
	`__asmeq
("%2", "r0") \

41 
	`__asmeq
("%3", "r4") \

43 : "Ù" (
__ªm
), "Ù" (
__ªs
) \

44 : "r" (
__n
), "r" (
__ba£
) \

46 
n
 = 
__ªs
; \

47 
__ªm
; \

48 })

	)

	@lib/muldi3.c

32 
	~"gc˛ib.h
"

34 
	#umul_µmm
(
xh
, 
xl
, 
a
, 
b
) \

35 {
USIty≥
 
__t0
, 
__t1
, 
__t2
; \

36 
	`__asm__
 ("%@ Inlined umul_ppmm \n\
 %2, %5,Üsr #16 \n\
 %0, %6,Üsr #16 \n\
 %3, %5, %2,Üsl #16 \n\
 %4, %6, %0,Üsl #16 \n\
 %1, %3, %4 \n\
 %4, %2, %4 \n\
 %3, %0, %3 \n\
 %0, %2, %0 \n\
 %3, %4, %3 \n\
 %0, %0, #65536 \n\
 %1, %1, %3,Üsl #16 \n\
 %0, %0, %3,Üsr #16" \

49 : "=&r" ((
USIty≥
Ë(
xh
)), \

50 "Ù" ((
USIty≥
Ë(
xl
)), \

51 "=&r" (
__t0
), "=&r" (
__t1
), "Ù" (
__t2
) \

52 : "r" ((
USIty≥
Ë(
a
)), \

53 "r" ((
USIty≥
Ë(
b
)));}

	)

56 
	#__umulsidi3
(
u
, 
v
) \

57 ({
DIuni⁄
 
__w
; \

58 
	`umul_µmm
 (
__w
.
s
.
high
, __w.s.
low
, 
u
, 
v
); \

59 
__w
.
Œ
; })

	)

62 
DIty≥


63 
	$__muldi3
 (
DIty≥
 
u
, DIty≥ 
v
)

65 
DIuni⁄
 
w
;

66 
DIuni⁄
 
uu
, 
vv
;

68 
uu
.
Œ
 = 
u
,

69 
vv
.
Œ
 = 
v
;

71 
w
.
Œ
 = 
	`__umulsidi3
 (
uu
.
s
.
low
, 
vv
.s.low);

72 
w
.
s
.
high
 +((
USIty≥
Ë
uu
.s.
low
 * (USIty≥Ë
vv
.s.high

73 + (
USIty≥
Ë
uu
.
s
.
high
 * (USIty≥Ë
vv
.s.
low
);

75  
w
.
Œ
;

76 
	}
}

	@lib/printf.c

1 
	~"v•rötf.h
"

2 
	~"¥ötf.h
"

3 
	~"°rög.h
"

5 
putc
(
c
);

6 
gëc
();

8 
	#OUTBUFSIZE
 1024

	)

9 
	#INBUFSIZE
 1024

	)

12 
	gg_pcOutBuf
[
OUTBUFSIZE
];

13 
	gg_pcInBuf
[
INBUFSIZE
];

16 
	$¥ötf
(c⁄° *
fmt
, ...)

18 
i
;

19 
Àn
;

20 
va_li°
 
¨gs
;

22 
	`va_°¨t
(
¨gs
, 
fmt
);

23 
Àn
 = 
	`v•rötf
(
g_pcOutBuf
,
fmt
,
¨gs
);

24 
	`va_íd
(
¨gs
);

25 
i
 = 0; i < 
	`°æí
(
g_pcOutBuf
); i++)

27 
	`putc
(
g_pcOutBuf
[
i
]);

29  
Àn
;

30 
	}
}

34 
	$sˇnf
(c⁄° * 
fmt
, ...)

36 
i
 = 0;

37 
c
;

38 
va_li°
 
¨gs
;

42 
c
 = 
	`gëc
();

43 if((
c
 == 0x0d) || (c == 0x0a))

45 
g_pcInBuf
[
i
] = '\0';

50 
g_pcInBuf
[
i
++] = 
c
;

54 
	`va_°¨t
(
¨gs
,
fmt
);

55 
i
 = 
	`vssˇnf
(
g_pcInBuf
,
fmt
,
¨gs
);

56 
	`va_íd
(
¨gs
);

58  
i
;

59 
	}
}

	@lib/printf.h

2 #i‚de‡
_PRINTF_H


3 
	#_PRINTF_H


	)

5 
¥ötf
(c⁄° *
fmt
, ...);

6 
sˇnf
(c⁄° * 
fmt
, ...);

	@lib/string.c

20 
	~"˘y≥.h
"

21 
	~"°rög.h
"

23 
putc
(
c
);

24 
	$puts
(c⁄° *
s
)

26 
i
 = 0;

27 *
s
) {

28 
	`putc
(*
s
);

29 
s
++;

30 
i
++;

32 
	`putc
('\n');

33 
	`putc
('\r');

34  
i
+2;

35 
	}
}

37 
	$putch¨
(
c
)

39 
	`putc
(()
c
);

40  
c
;

41 
	}
}

43 #i‚de‡
__HAVE_ARCH_STRNICMP


50 
	$°∫icmp
(c⁄° *
s1
, c⁄° *
s2
, 
size_t
 
Àn
)

53 
c1
, 
c2
;

55 
c1
 = 0; 
c2
 = 0;

56 i‡(
Àn
) {

58 
c1
 = *
s1
; 
c2
 = *
s2
;

59 
s1
++; 
s2
++;

60 i‡(!
c1
)

62 i‡(!
c2
)

64 i‡(
c1
 =
c2
)

66 
c1
 = 
	`tﬁowî
(c1);

67 
c2
 = 
	`tﬁowî
(c2);

68 i‡(
c1
 !
c2
)

70 } --
Àn
);

72  ()
c1
 - ()
c2
;

73 
	}
}

76 * 
	g___°πok
;

78 #i‚de‡
__HAVE_ARCH_STRCPY


84 * 
	$°r˝y
(* 
de°
,c⁄° *
§c
)

86 *
tmp
 = 
de°
;

88 (*
de°
++ = *
§c
++) != '\0')

90  
tmp
;

91 
	}
}

94 #i‚de‡
__HAVE_ARCH_STRNCPY


105 * 
	$°∫˝y
(* 
de°
,c⁄° *
§c
,
size_t
 
cou¡
)

107 *
tmp
 = 
de°
;

109 
cou¡
-- && (*
de°
++ = *
§c
++) != '\0')

112  
tmp
;

113 
	}
}

116 #i‚de‡
__HAVE_ARCH_STRCAT


122 * 
	$°rˇt
(* 
de°
, c⁄° * 
§c
)

124 *
tmp
 = 
de°
;

126 *
de°
)

127 
de°
++;

128 (*
de°
++ = *
§c
++) != '\0')

131  
tmp
;

132 
	}
}

135 #i‚de‡
__HAVE_ARCH_STRNCAT


145 * 
	$°∫ˇt
(*
de°
, c⁄° *
§c
, 
size_t
 
cou¡
)

147 *
tmp
 = 
de°
;

149 i‡(
cou¡
) {

150 *
de°
)

151 
de°
++;

152 (*
de°
++ = *
§c
++)) {

153 i‡(--
cou¡
 == 0) {

154 *
de°
 = '\0';

160  
tmp
;

161 
	}
}

164 #i‚de‡
__HAVE_ARCH_STRCMP


170 
	$°rcmp
(c⁄° * 
cs
,c⁄° * 
˘
)

172 sig√d 
__ªs
;

175 i‡((
__ªs
 = *
cs
 - *
˘
++) != 0 || !*cs++)

179  
__ªs
;

180 
	}
}

183 #i‚de‡
__HAVE_ARCH_STRNCMP


190 
	$°∫cmp
(c⁄° * 
cs
,c⁄° * 
˘
,
size_t
 
cou¡
)

192 sig√d 
__ªs
 = 0;

194 
cou¡
) {

195 i‡((
__ªs
 = *
cs
 - *
˘
++) != 0 || !*cs++)

197 
cou¡
--;

200  
__ªs
;

201 
	}
}

204 #i‚de‡
__HAVE_ARCH_STRCHR


210 * 
	$°rchr
(c⁄° * 
s
, 
c
)

212 ; *
s
 !(Ë
c
; ++s)

213 i‡(*
s
 == '\0')

214  
NULL
;

215  (*Ë
s
;

216 
	}
}

219 #i‚de‡
__HAVE_ARCH_STRRCHR


225 * 
	$°ºchr
(c⁄° * 
s
, 
c
)

227 c⁄° *
p
 = 
s
 + 
	`°æí
(s);

229 i‡(*
p
 =()
c
)

230  (*)
p
;

231 } --
p
 >
s
);

232  
NULL
;

233 
	}
}

236 #i‚de‡
__HAVE_ARCH_STRLEN


241 
size_t
 
	$°æí
(c⁄° * 
s
)

243 c⁄° *
sc
;

245 
sc
 = 
s
; *sc != '\0'; ++sc)

247  
sc
 - 
s
;

248 
	}
}

251 #i‚de‡
__HAVE_ARCH_STRNLEN


257 
size_t
 
	$°∫Àn
(c⁄° * 
s
, 
size_t
 
cou¡
)

259 c⁄° *
sc
;

261 
sc
 = 
s
; 
cou¡
-- && *sc != '\0'; ++sc)

263  
sc
 - 
s
;

264 
	}
}

267 #i‚de‡
__HAVE_ARCH_STRSPN


274 
size_t
 
	$°r•n
(c⁄° *
s
, c⁄° *
ac˚±
)

276 c⁄° *
p
;

277 c⁄° *
a
;

278 
size_t
 
cou¡
 = 0;

280 
p
 = 
s
; *p != '\0'; ++p) {

281 
a
 = 
ac˚±
; *a != '\0'; ++a) {

282 i‡(*
p
 =*
a
)

285 i‡(*
a
 == '\0')

286  
cou¡
;

287 ++
cou¡
;

290  
cou¡
;

291 
	}
}

294 #i‚de‡
__HAVE_ARCH_STRPBRK


300 * 
	$°Ωbrk
(c⁄° * 
cs
,c⁄° * 
˘
)

302 c⁄° *
sc1
,*
sc2
;

304  
sc1
 = 
cs
; *sc1 != '\0'; ++sc1) {

305  
sc2
 = 
˘
; *sc2 != '\0'; ++sc2) {

306 i‡(*
sc1
 =*
sc2
)

307  (*Ë
sc1
;

310  
NULL
;

311 
	}
}

314 #i‚de‡
__HAVE_ARCH_STRTOK


322 * 
	$°πok
(* 
s
,c⁄° * 
˘
)

324 *
sbegö
, *
£nd
;

326 
sbegö
 = 
s
 ? s : 
___°πok
;

327 i‡(!
sbegö
) {

328  
NULL
;

330 
sbegö
 +
	`°r•n
(sbegö,
˘
);

331 i‡(*
sbegö
 == '\0') {

332 
___°πok
 = 
NULL
;

333 –
NULL
 );

335 
£nd
 = 
	`°Ωbrk
–
sbegö
, 
˘
);

336 i‡(
£nd
 && *send != '\0')

337 *
£nd
++ = '\0';

338 
___°πok
 = 
£nd
;

339  (
sbegö
);

340 
	}
}

343 #i‚de‡
__HAVE_ARCH_STRSEP


355 * 
	$°r£p
(**
s
, c⁄° *
˘
)

357 *
sbegö
 = *
s
, *
íd
;

359 i‡(
sbegö
 =
NULL
)

360  
NULL
;

362 
íd
 = 
	`°Ωbrk
(
sbegö
, 
˘
);

363 i‡(
íd
)

364 *
íd
++ = '\0';

365 *
s
 = 
íd
;

367  
sbegö
;

368 
	}
}

371 #i‚de‡
__HAVE_ARCH_MEMSET


380 * 
	$mem£t
(* 
s
,
c
,
size_t
 
cou¡
)

382 *
xs
 = (*Ë
s
;

384 
cou¡
--)

385 *
xs
++ = 
c
;

387  
s
;

388 
	}
}

391 #i‚de‡
__HAVE_ARCH_BCOPY


404 
	$bc›y
(c⁄° *
§c
, *
de°
, 
size_t
 
cou¡
)

406 *
de°Tmp
 = (*)
de°
;

407 *
§cTmp
 = (*)
§c
;

409 
cou¡
--)

410 *
de°Tmp
++ = *
§cTmp
++;

411 
	}
}

414 #i‚de‡
__HAVE_ARCH_MEMCPY


424 * 
	$mem˝y
(* 
de°
,c⁄° *
§c
,
size_t
 
cou¡
)

426 *
tmp
 = (*Ë
de°
, *
s
 = (*Ë
§c
;

428 
cou¡
--)

429 *
tmp
++ = *
s
++;

431  
de°
;

432 
	}
}

435 #i‚de‡
__HAVE_ARCH_MEMMOVE


444 * 
	$memmove
(* 
de°
,c⁄° *
§c
,
size_t
 
cou¡
)

446 *
tmp
, *
s
;

448 i‡(
de°
 <
§c
) {

449 
tmp
 = (*Ë
de°
;

450 
s
 = (*Ë
§c
;

451 
cou¡
--)

452 *
tmp
++ = *
s
++;

455 
tmp
 = (*Ë
de°
 + 
cou¡
;

456 
s
 = (*Ë
§c
 + 
cou¡
;

457 
cou¡
--)

458 *--
tmp
 = *--
s
;

461  
de°
;

462 
	}
}

465 #i‚de‡
__HAVE_ARCH_MEMCMP


472 
	$memcmp
(c⁄° * 
cs
,c⁄° * 
˘
,
size_t
 
cou¡
)

474 c⁄° *
su1
, *
su2
;

475 
ªs
 = 0;

477  
su1
 = (c⁄° *)
cs
, 
su2
 = (c⁄° *)
˘
; 0 < 
cou¡
; ++su1, ++su2, count--)

478 i‡((
ªs
 = *
su1
 - *
su2
) != 0)

480  
ªs
;

481 
	}
}

484 #i‚de‡
__HAVE_ARCH_MEMSCAN


494 * 
	$memsˇn
(* 
addr
, 
c
, 
size_t
 
size
)

496 * 
p
 = (*Ë
addr
;

498 
size
) {

499 i‡(*
p
 =
c
)

500  (*Ë
p
;

501 
p
++;

502 
size
--;

504  (*Ë
p
;

505 
	}
}

508 #i‚de‡
__HAVE_ARCH_STRSTR


514 * 
	$°r°r
(c⁄° * 
s1
,c⁄° * 
s2
)

516 
l1
, 
l2
;

518 
l2
 = 
	`°æí
(
s2
);

519 i‡(!
l2
)

520  (*Ë
s1
;

521 
l1
 = 
	`°æí
(
s1
);

522 
l1
 >
l2
) {

523 
l1
--;

524 i‡(!
	`memcmp
(
s1
,
s2
,
l2
))

525  (*Ë
s1
;

526 
s1
++;

528  
NULL
;

529 
	}
}

532 #i‚de‡
__HAVE_ARCH_MEMCHR


542 *
	$memchr
(c⁄° *
s
, 
c
, 
size_t
 
n
)

544 c⁄° *
p
 = (c⁄° *)
s
;

545 
n
-- != 0) {

546 i‡(()
c
 =*
p
++) {

547  (*)(
p
-1);

550  
NULL
;

551 
	}
}

	@lib/vsprintf.c

21 
	~"ty≥s.h
"

22 
	~"kî√l.h
"

24 
	~"˘y≥.h
"

25 
	~"°rög.h
"

26 
	~"div64.h
"

27 
	~"v•rötf.h
"

29 
	#u∆ikñy
(
x
Ë
	`__buûtö_ex≥˘
(!!(x), 0)

	)

37 
	$sim∂e_°πoul
(c⁄° *
˝
,**
ídp
,
ba£
)

39 
ªsu…
 = 0,
vÆue
;

41 i‡(!
ba£
) {

42 
ba£
 = 10;

43 i‡(*
˝
 == '0') {

44 
ba£
 = 8;

45 
˝
++;

46 i‡((
	`touµî
(*
˝
Ë='X'Ë&& 
	`isxdigô
(cp[1])) {

47 
˝
++;

48 
ba£
 = 16;

51 } i‡(
ba£
 == 16) {

52 i‡(
˝
[0] ='0' && 
	`touµî
(cp[1]) == 'X')

53 
˝
 += 2;

55 
	`isxdigô
(*
˝
) &&

56 (
vÆue
 = 
	`isdigô
(*
˝
Ë? *˝-'0' : 
	`touµî
(*˝)-'A'+10Ë< 
ba£
) {

57 
ªsu…
 =Ñesu…*
ba£
 + 
vÆue
;

58 
˝
++;

60 i‡(
ídp
)

61 *
ídp
 = (*)
˝
;

62  
ªsu…
;

63 
	}
}

73 
	$sim∂e_°πﬁ
(c⁄° *
˝
,**
ídp
,
ba£
)

75 if(*
˝
=='-')

76  -
	`sim∂e_°πoul
(
˝
+1,
ídp
,
ba£
);

77  
	`sim∂e_°πoul
(
˝
,
ídp
,
ba£
);

78 
	}
}

88 
	$sim∂e_°πouŒ
(c⁄° *
˝
,**
ídp
,
ba£
)

90 
ªsu…
 = 0,
vÆue
;

92 i‡(!
ba£
) {

93 
ba£
 = 10;

94 i‡(*
˝
 == '0') {

95 
ba£
 = 8;

96 
˝
++;

97 i‡((
	`touµî
(*
˝
Ë='X'Ë&& 
	`isxdigô
(cp[1])) {

98 
˝
++;

99 
ba£
 = 16;

102 } i‡(
ba£
 == 16) {

103 i‡(
˝
[0] ='0' && 
	`touµî
(cp[1]) == 'X')

104 
˝
 += 2;

106 
	`isxdigô
(*
˝
Ë&& (
vÆue
 = 
	`isdigô
(*˝Ë? *˝-'0' : (
	`i¶owî
(*cp)

107 ? 
	`touµî
(*
˝
Ë: *˝)-'A'+10Ë< 
ba£
) {

108 
ªsu…
 =Ñesu…*
ba£
 + 
vÆue
;

109 
˝
++;

111 i‡(
ídp
)

112 *
ídp
 = (*)
˝
;

113  
ªsu…
;

114 
	}
}

124 
	$sim∂e_°πﬁl
(c⁄° *
˝
,**
ídp
,
ba£
)

126 if(*
˝
=='-')

127  -
	`sim∂e_°πouŒ
(
˝
+1,
ídp
,
ba£
);

128  
	`sim∂e_°πouŒ
(
˝
,
ídp
,
ba£
);

129 
	}
}

131 
	$skù_©oi
(c⁄° **
s
)

133 
i
=0;

135 
	`isdigô
(**
s
))

136 
i
 = i*10 + *((*
s
)++) - '0';

137  
i
;

138 
	}
}

140 
	#ZEROPAD
 1

	)

141 
	#SIGN
 2

	)

142 
	#PLUS
 4

	)

143 
	#SPACE
 8

	)

144 
	#LEFT
 16

	)

145 
	#SPECIAL
 32

	)

146 
	#LARGE
 64

	)

148 * 
	$numbî
(* 
buf
, * 
íd
, 
num
, 
ba£
, 
size
, 
¥ecisi⁄
, 
ty≥
)

150 
c
,
sign
,
tmp
[66];

151 c⁄° *
digôs
;

152 c⁄° 
smÆl_digôs
[] = "0123456789abcdefghijklmnopqrstuvwxyz";

153 c⁄° 
œrge_digôs
[] = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";

154 
i
;

156 
digôs
 = (
ty≥
 & 
LARGE
Ë? 
œrge_digôs
 : 
smÆl_digôs
;

157 i‡(
ty≥
 & 
LEFT
)

158 
ty≥
 &~
ZEROPAD
;

159 i‡(
ba£
 < 2 || base > 36)

160  
NULL
;

161 
c
 = (
ty≥
 & 
ZEROPAD
) ? '0' : ' ';

162 
sign
 = 0;

163 i‡(
ty≥
 & 
SIGN
) {

164 i‡((sig√d Ë
num
 < 0) {

165 
sign
 = '-';

166 
num
 = - (signed )Çum;

167 
size
--;

168 } i‡(
ty≥
 & 
PLUS
) {

169 
sign
 = '+';

170 
size
--;

171 } i‡(
ty≥
 & 
SPACE
) {

172 
sign
 = ' ';

173 
size
--;

176 i‡(
ty≥
 & 
SPECIAL
) {

177 i‡(
ba£
 == 16)

178 
size
 -= 2;

179 i‡(
ba£
 == 8)

180 
size
--;

182 
i
 = 0;

183 i‡(
num
 == 0)

184 
tmp
[
i
++]='0';

185 
num
 != 0)

186 
tmp
[
i
++] = 
digôs
[
	`do_div
(
num
,
ba£
)];

187 i‡(
i
 > 
¥ecisi⁄
)

188 
¥ecisi⁄
 = 
i
;

189 
size
 -
¥ecisi⁄
;

190 i‡(!(
ty≥
&(
ZEROPAD
+
LEFT
))) {

191 
size
-->0) {

192 i‡(
buf
 <
íd
)

193 *
buf
 = ' ';

194 ++
buf
;

197 i‡(
sign
) {

198 i‡(
buf
 <
íd
)

199 *
buf
 = 
sign
;

200 ++
buf
;

202 i‡(
ty≥
 & 
SPECIAL
) {

203 i‡(
ba£
==8) {

204 i‡(
buf
 <
íd
)

205 *
buf
 = '0';

206 ++
buf
;

207 } i‡(
ba£
==16) {

208 i‡(
buf
 <
íd
)

209 *
buf
 = '0';

210 ++
buf
;

211 i‡(
buf
 <
íd
)

212 *
buf
 = 
digôs
[33];

213 ++
buf
;

216 i‡(!(
ty≥
 & 
LEFT
)) {

217 
size
-- > 0) {

218 i‡(
buf
 <
íd
)

219 *
buf
 = 
c
;

220 ++
buf
;

223 
i
 < 
¥ecisi⁄
--) {

224 i‡(
buf
 <
íd
)

225 *
buf
 = '0';

226 ++
buf
;

228 
i
-- > 0) {

229 i‡(
buf
 <
íd
)

230 *
buf
 = 
tmp
[
i
];

231 ++
buf
;

233 
size
-- > 0) {

234 i‡(
buf
 <
íd
)

235 *
buf
 = ' ';

236 ++
buf
;

238  
buf
;

239 
	}
}

259 
	$v¢¥ötf
(*
buf
, 
size_t
 
size
, c⁄° *
fmt
, 
va_li°
 
¨gs
)

261 
Àn
;

262 
num
;

263 
i
, 
ba£
;

264 *
°r
, *
íd
, 
c
;

265 c⁄° *
s
;

267 
Êags
;

269 
fõld_width
;

270 
¥ecisi⁄
;

272 
quÆifõr
;

277 i‡(
	`u∆ikñy
((Ë
size
 < 0)) {

279 
w¨n
 = 1;

281 
w¨n
 = 0;

285 
°r
 = 
buf
;

286 
íd
 = 
buf
 + 
size
 - 1;

288 i‡(
íd
 < 
buf
 - 1) {

289 
íd
 = ((*) -1);

290 
size
 = 
íd
 - 
buf
 + 1;

293 ; *
fmt
 ; ++fmt) {

294 i‡(*
fmt
 != '%') {

295 i‡(
°r
 <
íd
)

296 *
°r
 = *
fmt
;

297 ++
°r
;

302 
Êags
 = 0;

303 
ª≥©
:

304 ++
fmt
;

305 *
fmt
) {

306 '-': 
Êags
 |
LEFT
; 
ª≥©
;

307 '+': 
Êags
 |
PLUS
; 
ª≥©
;

308 ' ': 
Êags
 |
SPACE
; 
ª≥©
;

309 '#': 
Êags
 |
SPECIAL
; 
ª≥©
;

310 '0': 
Êags
 |
ZEROPAD
; 
ª≥©
;

314 
fõld_width
 = -1;

315 i‡(
	`isdigô
(*
fmt
))

316 
fõld_width
 = 
	`skù_©oi
(&
fmt
);

317 i‡(*
fmt
 == '*') {

318 ++
fmt
;

320 
fõld_width
 = 
	`va_¨g
(
¨gs
, );

321 i‡(
fõld_width
 < 0) {

322 
fõld_width
 = -field_width;

323 
Êags
 |
LEFT
;

328 
¥ecisi⁄
 = -1;

329 i‡(*
fmt
 == '.') {

330 ++
fmt
;

331 i‡(
	`isdigô
(*
fmt
))

332 
¥ecisi⁄
 = 
	`skù_©oi
(&
fmt
);

333 i‡(*
fmt
 == '*') {

334 ++
fmt
;

336 
¥ecisi⁄
 = 
	`va_¨g
(
¨gs
, );

338 i‡(
¥ecisi⁄
 < 0)

339 
¥ecisi⁄
 = 0;

343 
quÆifõr
 = -1;

344 i‡(*
fmt
 == 'h' || *fmt == 'l' || *fmt == 'L' ||

345 *
fmt
 =='Z' || *fmt == 'z') {

346 
quÆifõr
 = *
fmt
;

347 ++
fmt
;

348 i‡(
quÆifõr
 ='l' && *
fmt
 == 'l') {

349 
quÆifõr
 = 'L';

350 ++
fmt
;

355 
ba£
 = 10;

357 *
fmt
) {

359 i‡(!(
Êags
 & 
LEFT
)) {

360 --
fõld_width
 > 0) {

361 i‡(
°r
 <
íd
)

362 *
°r
 = ' ';

363 ++
°r
;

366 
c
 = (Ë
	`va_¨g
(
¨gs
, );

367 i‡(
°r
 <
íd
)

368 *
°r
 = 
c
;

369 ++
°r
;

370 --
fõld_width
 > 0) {

371 i‡(
°r
 <
íd
)

372 *
°r
 = ' ';

373 ++
°r
;

378 
s
 = 
	`va_¨g
(
¨gs
, *);

379 i‡(()
s
 < 1024)

380 
s
 = "<NULL>";

382 
Àn
 = 
	`°∫Àn
(
s
, 
¥ecisi⁄
);

384 i‡(!(
Êags
 & 
LEFT
)) {

385 
Àn
 < 
fõld_width
--) {

386 i‡(
°r
 <
íd
)

387 *
°r
 = ' ';

388 ++
°r
;

391 
i
 = 0; i < 
Àn
; ++i) {

392 i‡(
°r
 <
íd
)

393 *
°r
 = *
s
;

394 ++
°r
; ++
s
;

396 
Àn
 < 
fõld_width
--) {

397 i‡(
°r
 <
íd
)

398 *
°r
 = ' ';

399 ++
°r
;

404 i‡(
fõld_width
 == -1) {

405 
fõld_width
 = 2*(*);

406 
Êags
 |
ZEROPAD
;

408 
°r
 = 
	`numbî
(°r, 
íd
,

409 (Ë
	`va_¨g
(
¨gs
, *),

410 16, 
fõld_width
, 
¥ecisi⁄
, 
Êags
);

417 i‡(
quÆifõr
 == 'l') {

418 * 
ù
 = 
	`va_¨g
(
¨gs
, *);

419 *
ù
 = (
°r
 - 
buf
);

420 } i‡(
quÆifõr
 == 'Z' || qualifier == 'z') {

421 
size_t
 * 
ù
 = 
	`va_¨g
(
¨gs
, size_t *);

422 *
ù
 = (
°r
 - 
buf
);

424 * 
ù
 = 
	`va_¨g
(
¨gs
, *);

425 *
ù
 = (
°r
 - 
buf
);

430 i‡(
°r
 <
íd
)

431 *
°r
 = '%';

432 ++
°r
;

437 
ba£
 = 8;

441 
Êags
 |
LARGE
;

443 
ba£
 = 16;

448 
Êags
 |
SIGN
;

453 i‡(
°r
 <
íd
)

454 *
°r
 = '%';

455 ++
°r
;

456 i‡(*
fmt
) {

457 i‡(
°r
 <
íd
)

458 *
°r
 = *
fmt
;

459 ++
°r
;

461 --
fmt
;

465 i‡(
quÆifõr
 == 'L')

466 
num
 = 
	`va_¨g
(
¨gs
, );

467 i‡(
quÆifõr
 == 'l') {

468 
num
 = 
	`va_¨g
(
¨gs
, );

469 i‡(
Êags
 & 
SIGN
)

470 
num
 = (signed )Çum;

471 } i‡(
quÆifõr
 == 'Z' || qualifier == 'z') {

472 
num
 = 
	`va_¨g
(
¨gs
, 
size_t
);

473 } i‡(
quÆifõr
 == 'h') {

474 
num
 = (Ë
	`va_¨g
(
¨gs
, );

475 i‡(
Êags
 & 
SIGN
)

476 
num
 = (signed )Çum;

478 
num
 = 
	`va_¨g
(
¨gs
, );

479 i‡(
Êags
 & 
SIGN
)

480 
num
 = (signed )Çum;

482 
°r
 = 
	`numbî
(°r, 
íd
, 
num
, 
ba£
,

483 
fõld_width
, 
¥ecisi⁄
, 
Êags
);

485 i‡(
°r
 <
íd
)

486 *
°r
 = '\0';

487 i‡(
size
 > 0)

489 *
íd
 = '\0';

493  
°r
-
buf
;

494 
	}
}

512 
	$vs˙¥ötf
(*
buf
, 
size_t
 
size
, c⁄° *
fmt
, 
va_li°
 
¨gs
)

514 
i
;

516 
i
=
	`v¢¥ötf
(
buf
,
size
,
fmt
,
¨gs
);

517  (
i
 >
size
) ? (size - 1) : i;

518 
	}
}

534 
	$¢¥ötf
(* 
buf
, 
size_t
 
size
, c⁄° *
fmt
, ...)

536 
va_li°
 
¨gs
;

537 
i
;

539 
	`va_°¨t
(
¨gs
, 
fmt
);

540 
i
=
	`v¢¥ötf
(
buf
,
size
,
fmt
,
¨gs
);

541 
	`va_íd
(
¨gs
);

542  
i
;

543 
	}
}

559 
	$s˙¥ötf
(* 
buf
, 
size_t
 
size
, c⁄° *
fmt
, ...)

561 
va_li°
 
¨gs
;

562 
i
;

564 
	`va_°¨t
(
¨gs
, 
fmt
);

565 
i
 = 
	`v¢¥ötf
(
buf
, 
size
, 
fmt
, 
¨gs
);

566 
	`va_íd
(
¨gs
);

567  (
i
 >
size
) ? (size - 1) : i;

568 
	}
}

584 
	$v•rötf
(*
buf
, c⁄° *
fmt
, 
va_li°
 
¨gs
)

586  
	`v¢¥ötf
(
buf
, (~0U)>>1, 
fmt
, 
¨gs
);

587 
	}
}

601 
	$•rötf
(* 
buf
, c⁄° *
fmt
, ...)

603 
va_li°
 
¨gs
;

604 
i
;

606 
	`va_°¨t
(
¨gs
, 
fmt
);

611 
i
=
	`v•rötf
(
buf
,
fmt
,
¨gs
);

616 
	`va_íd
(
¨gs
);

617  
i
;

618 
	}
}

628 
	$vssˇnf
(c⁄° * 
buf
, c⁄° * 
fmt
, 
va_li°
 
¨gs
)

630 c⁄° *
°r
 = 
buf
;

631 *
√xt
;

632 
digô
;

633 
num
 = 0;

634 
quÆifõr
;

635 
ba£
;

636 
fõld_width
;

637 
is_sign
 = 0;

639 *
fmt
 && *
°r
) {

644 i‡(
	`is•a˚
(*
fmt
)) {

645 
	`is•a˚
(*
fmt
))

646 ++
fmt
;

647 
	`is•a˚
(*
°r
))

648 ++
°r
;

652 i‡(*
fmt
 != '%' && *fmt) {

653 i‡(*
fmt
++ !*
°r
++)

658 i‡(!*
fmt
)

660 ++
fmt
;

665 i‡(*
fmt
 == '*') {

666 !
	`is•a˚
(*
fmt
) && *fmt)

667 
fmt
++;

668 !
	`is•a˚
(*
°r
) && *str)

669 
°r
++;

674 
fõld_width
 = -1;

675 i‡(
	`isdigô
(*
fmt
))

676 
fõld_width
 = 
	`skù_©oi
(&
fmt
);

679 
quÆifõr
 = -1;

680 i‡(*
fmt
 == 'h' || *fmt == 'l' || *fmt == 'L' ||

681 *
fmt
 == 'Z' || *fmt == 'z') {

682 
quÆifõr
 = *
fmt
++;

683 i‡(
	`u∆ikñy
(
quÆifõr
 =*
fmt
)) {

684 i‡(
quÆifõr
 == 'h') {

685 
quÆifõr
 = 'H';

686 
fmt
++;

687 } i‡(
quÆifõr
 == 'l') {

688 
quÆifõr
 = 'L';

689 
fmt
++;

693 
ba£
 = 10;

694 
is_sign
 = 0;

696 i‡(!*
fmt
 || !*
°r
)

699 *
fmt
++) {

702 *
s
 = (*Ë
	`va_¨g
(
¨gs
,*);

703 i‡(
fõld_width
 == -1)

704 
fõld_width
 = 1;

706 *
s
++ = *
°r
++;

707 } --
fõld_width
 > 0 && *
°r
);

708 
num
++;

713 *
s
 = (*Ë
	`va_¨g
(
¨gs
, *);

714 if(
fõld_width
 == -1)

715 
fõld_width
 = 
INT_MAX
;

717 
	`is•a˚
(*
°r
))

718 
°r
++;

721 *
°r
 && !
	`is•a˚
(*°rË&& 
fõld_width
--) {

722 *
s
++ = *
°r
++;

724 *
s
 = '\0';

725 
num
++;

731 *
i
 = (*)
	`va_¨g
(
¨gs
,*);

732 *
i
 = 
°r
 - 
buf
;

736 
ba£
 = 8;

740 
ba£
 = 16;

743 
ba£
 = 0;

745 
is_sign
 = 1;

750 i‡(*
°r
++ != '%')

751  
num
;

755  
num
;

761 
	`is•a˚
(*
°r
))

762 
°r
++;

764 
digô
 = *
°r
;

765 i‡(
is_sign
 && 
digô
 == '-')

766 
digô
 = *(
°r
 + 1);

768 i‡(!
digô


769 || (
ba£
 =16 && !
	`isxdigô
(
digô
))

770 || (
ba£
 =10 && !
	`isdigô
(
digô
))

771 || (
ba£
 =8 && (!
	`isdigô
(
digô
) || digit > '7'))

772 || (
ba£
 =0 && !
	`isdigô
(
digô
)))

775 
quÆifõr
) {

777 i‡(
is_sign
) {

778 sig√d *
s
 = (sig√d *Ë
	`va_¨g
(
¨gs
,signed *);

779 *
s
 = (sig√d Ë
	`sim∂e_°πﬁ
(
°r
,&
√xt
,
ba£
);

781 *
s
 = (*Ë
	`va_¨g
(
¨gs
, *);

782 *
s
 = (Ë
	`sim∂e_°πoul
(
°r
, &
√xt
, 
ba£
);

786 i‡(
is_sign
) {

787 *
s
 = (*Ë
	`va_¨g
(
¨gs
,*);

788 *
s
 = (Ë
	`sim∂e_°πﬁ
(
°r
,&
√xt
,
ba£
);

790 *
s
 = (*Ë
	`va_¨g
(
¨gs
, *);

791 *
s
 = (Ë
	`sim∂e_°πoul
(
°r
, &
√xt
, 
ba£
);

795 i‡(
is_sign
) {

796 *
l
 = (*Ë
	`va_¨g
(
¨gs
,*);

797 *
l
 = 
	`sim∂e_°πﬁ
(
°r
,&
√xt
,
ba£
);

799 *
l
 = (*Ë
	`va_¨g
(
¨gs
,*);

800 *
l
 = 
	`sim∂e_°πoul
(
°r
,&
√xt
,
ba£
);

804 i‡(
is_sign
) {

805 *
l
 = (*Ë
	`va_¨g
(
¨gs
,*);

806 *
l
 = 
	`sim∂e_°πﬁl
(
°r
,&
√xt
,
ba£
);

808 *
l
 = (*Ë
	`va_¨g
(
¨gs
,*);

809 *
l
 = 
	`sim∂e_°πouŒ
(
°r
,&
√xt
,
ba£
);

815 
size_t
 *
s
 = (size_t*Ë
	`va_¨g
(
¨gs
,size_t*);

816 *
s
 = (
size_t
Ë
	`sim∂e_°πoul
(
°r
,&
√xt
,
ba£
);

820 i‡(
is_sign
) {

821 *
i
 = (*Ë
	`va_¨g
(
¨gs
, *);

822 *
i
 = (Ë
	`sim∂e_°πﬁ
(
°r
,&
√xt
,
ba£
);

824 *
i
 = (*Ë
	`va_¨g
(
¨gs
, *);

825 *
i
 = (Ë
	`sim∂e_°πoul
(
°r
,&
√xt
,
ba£
);

829 
num
++;

831 i‡(!
√xt
)

833 
°r
 = 
√xt
;

835  
num
;

836 
	}
}

846 
	$ssˇnf
(c⁄° * 
buf
, c⁄° * 
fmt
, ...)

848 
va_li°
 
¨gs
;

849 
i
;

851 
	`va_°¨t
(
¨gs
,
fmt
);

852 
i
 = 
	`vssˇnf
(
buf
,
fmt
,
¨gs
);

853 
	`va_íd
(
¨gs
);

854  
i
;

855 
	}
}

	@lib/vsprintf.h

8 
	~"ty≥s.h
"

10 #i‚de‡
va_¨g


12 #i‚de‡
_VALIST


13 
	#_VALIST


	)

14 *
	tva_li°
;

20 
	#NATIVE_INT
 

	)

21 
	#_AUPBND
 ( (
NATIVE_INT
Ë- 1)

	)

22 
	#_ADNBND
 ( (
NATIVE_INT
Ë- 1)

	)

28 
	#_bnd
(
X
, 
bnd
Ë((( (X)Ë+ (bnd)Ë& (~(bnd)))

	)

29 
	#va_¨g
(
≠
, 
T
Ë(*(T *)((◊pË+(
	`_bnd
 (T, 
_AUPBND
))Ë- (_bnd (T,
_ADNBND
))))

	)

30 
	#va_íd
(
≠
Ë(Ë0

	)

31 
	#va_°¨t
(
≠
, 
A
Ë(Ë(◊pË(((*Ë&(A)Ë+ (
	`_bnd
 (A,
_AUPBND
))))

	)

35 
sim∂e_°πoul
(c⁄° *
˝
,**
ídp
,
ba£
);

36 
sim∂e_°πﬁ
(c⁄° *
˝
,**
ídp
,
ba£
);

37 
sim∂e_°πouŒ
(c⁄° *
˝
,**
ídp
,
ba£
);

38 
sim∂e_°πﬁl
(c⁄° *
˝
,**
ídp
,
ba£
);

41 
v¢¥ötf
(*
buf
, 
size_t
 
size
, c⁄° *
fmt
, 
va_li°
 
¨gs
);

42 
¢¥ötf
(* 
buf
, 
size_t
 
size
, c⁄° *
fmt
, ...);

43 
v•rötf
(*
buf
, c⁄° *
fmt
, 
va_li°
 
¨gs
);

44 
•rötf
(* 
buf
, c⁄° *
fmt
, ...);

45 
vssˇnf
(c⁄° * 
buf
, c⁄° * 
fmt
, 
va_li°
 
¨gs
);

46 
ssˇnf
(c⁄° * 
buf
, c⁄° * 
fmt
, ...);

	@main.c

1 
	~<°dio.h
>

2 
	~"£rül.h
"

3 
	~"lcdlib.h
"

4 
	~"s3c24xx.h
"

6 
	$maö
()

8 
c
;

10 
	`u¨t0_öô
();

14 
	`¥ötf
("\r\n##### Test TFT LCD #####\r\n");

15 
	`¥ötf
("[1] TFT240320 8Bit\n\r");

16 
	`¥ötf
("[2] TFT240320 16Bit\n\r");

17 
	`¥ötf
("[3] TFT640480 8Bit\n\r");

18 
	`¥ötf
("[4] TFT640480 16Bit\n\r");

19 
	`¥ötf
("Enter your selection: ");

21 
c
 = 
	`gëc
();

22 
	`¥ötf
("%c\n\r", 
c
);

23 
c
)

27 
	`Te°_Lcd_T·_8Bô_240320
();

33 
	`Te°_Lcd_T·_16Bô_240320
();

39 
	`Te°_Lcd_T·_8Bô_640480
();

45 
	`Te°_Lcd_T·_16Bô_640480
();

55 
	}
}

	@nand.c

2 
	#GSTATUS1
 (*(vﬁ©ûê*)0x560000B0)

	)

3 
	#BUSY
 1

	)

5 
	tS3C24X0_REG32
;

10 
S3C24X0_REG32
 
	mNFCONF
;

11 
S3C24X0_REG32
 
	mNFCMD
;

12 
S3C24X0_REG32
 
	mNFADDR
;

13 
S3C24X0_REG32
 
	mNFDATA
;

14 
S3C24X0_REG32
 
	mNFSTAT
;

15 
S3C24X0_REG32
 
	mNFECC
;

16 } 
	tS3C2410_NAND
;

20 
S3C24X0_REG32
 
	mNFCONF
;

21 
S3C24X0_REG32
 
	mNFCONT
;

22 
S3C24X0_REG32
 
	mNFCMD
;

23 
S3C24X0_REG32
 
	mNFADDR
;

24 
S3C24X0_REG32
 
	mNFDATA
;

25 
S3C24X0_REG32
 
	mNFMECCD0
;

26 
S3C24X0_REG32
 
	mNFMECCD1
;

27 
S3C24X0_REG32
 
	mNFSECCD
;

28 
S3C24X0_REG32
 
	mNFSTAT
;

29 
S3C24X0_REG32
 
	mNFESTAT0
;

30 
S3C24X0_REG32
 
	mNFESTAT1
;

31 
S3C24X0_REG32
 
	mNFMECC0
;

32 
S3C24X0_REG32
 
	mNFMECC1
;

33 
S3C24X0_REG32
 
	mNFSECC
;

34 
S3C24X0_REG32
 
	mNFSBLK
;

35 
S3C24X0_REG32
 
	mNFEBLK
;

36 } 
	tS3C2440_NAND
;

40 (*
	m«nd_ª£t
)();

41 (*
	mwaô_idÀ
)();

42 (*
	m«nd_£À˘_chù
)();

43 (*
	m«nd_de£À˘_chù
)();

44 (*
	mwrôe_cmd
)(
	mcmd
);

45 (*
	mwrôe_addr
)(
	maddr
);

46 (*
	mªad_d©a
)();

47 }
	tt_«nd_chù
;

49 
S3C2410_NAND
 * 
	gs3c2410«nd
 = (S3C2410_NAND *)0x4e000000;

50 
S3C2440_NAND
 * 
	gs3c2440«nd
 = (S3C2440_NAND *)0x4e000000;

52 
t_«nd_chù
 
	g«nd_chù
;

55 
«nd_öô
();

56 
«nd_ªad
(*
buf
, 
°¨t_addr
, 
size
);

59 
«nd_ª£t
();

60 
waô_idÀ
();

61 
«nd_£À˘_chù
();

62 
«nd_de£À˘_chù
();

63 
wrôe_cmd
(
cmd
);

64 
wrôe_addr
(
addr
);

65 
ªad_d©a
();

68 
s3c2410_«nd_ª£t
();

69 
s3c2410_waô_idÀ
();

70 
s3c2410_«nd_£À˘_chù
();

71 
s3c2410_«nd_de£À˘_chù
();

72 
s3c2410_wrôe_cmd
(
cmd
);

73 
s3c2410_wrôe_addr
(
addr
);

74 
s3c2410_ªad_d©a
();

77 
s3c2440_«nd_ª£t
();

78 
s3c2440_waô_idÀ
();

79 
s3c2440_«nd_£À˘_chù
();

80 
s3c2440_«nd_de£À˘_chù
();

81 
s3c2440_wrôe_cmd
(
cmd
);

82 
s3c2440_wrôe_addr
(
addr
);

83 
s3c2440_ªad_d©a
();

88 
	$s3c2410_«nd_ª£t
()

90 
	`s3c2410_«nd_£À˘_chù
();

91 
	`s3c2410_wrôe_cmd
(0xff);

92 
	`s3c2410_waô_idÀ
();

93 
	`s3c2410_«nd_de£À˘_chù
();

94 
	}
}

97 
	$s3c2410_waô_idÀ
()

99 
i
;

100 vﬁ©ûê*
p
 = (vﬁ©ûê*)&
s3c2410«nd
->
NFSTAT
;

101 !(*
p
 & 
BUSY
))

102 
i
=0; i<10; i++);

103 
	}
}

106 
	$s3c2410_«nd_£À˘_chù
()

108 
i
;

109 
s3c2410«nd
->
NFCONF
 &= ~(1<<11);

110 
i
=0; i<10; i++);

111 
	}
}

114 
	$s3c2410_«nd_de£À˘_chù
()

116 
s3c2410«nd
->
NFCONF
 |= (1<<11);

117 
	}
}

120 
	$s3c2410_wrôe_cmd
(
cmd
)

122 vﬁ©ûê*
p
 = (vﬁ©ûê*)&
s3c2410«nd
->
NFCMD
;

123 *
p
 = 
cmd
;

124 
	}
}

127 
	$s3c2410_wrôe_addr
(
addr
)

129 
i
;

130 vﬁ©ûê*
p
 = (vﬁ©ûê*)&
s3c2410«nd
->
NFADDR
;

132 *
p
 = 
addr
 & 0xff;

133 
i
=0; i<10; i++);

134 *
p
 = (
addr
 >> 9) & 0xff;

135 
i
=0; i<10; i++);

136 *
p
 = (
addr
 >> 17) & 0xff;

137 
i
=0; i<10; i++);

138 *
p
 = (
addr
 >> 25) & 0xff;

139 
i
=0; i<10; i++);

140 
	}
}

143 
	$s3c2410_ªad_d©a
()

145 vﬁ©ûê*
p
 = (vﬁ©ûê*)&
s3c2410«nd
->
NFDATA
;

146  *
p
;

147 
	}
}

152 
	$s3c2440_«nd_ª£t
()

154 
	`s3c2440_«nd_£À˘_chù
();

155 
	`s3c2440_wrôe_cmd
(0xff);

156 
	`s3c2440_waô_idÀ
();

157 
	`s3c2440_«nd_de£À˘_chù
();

158 
	}
}

161 
	$s3c2440_waô_idÀ
()

163 
i
;

164 vﬁ©ûê*
p
 = (vﬁ©ûê*)&
s3c2440«nd
->
NFSTAT
;

165 !(*
p
 & 
BUSY
))

166 
i
=0; i<10; i++);

167 
	}
}

170 
	$s3c2440_«nd_£À˘_chù
()

172 
i
;

173 
s3c2440«nd
->
NFCONT
 &= ~(1<<1);

174 
i
=0; i<10; i++);

175 
	}
}

178 
	$s3c2440_«nd_de£À˘_chù
()

180 
s3c2440«nd
->
NFCONT
 |= (1<<1);

181 
	}
}

184 
	$s3c2440_wrôe_cmd
(
cmd
)

186 vﬁ©ûê*
p
 = (vﬁ©ûê*)&
s3c2440«nd
->
NFCMD
;

187 *
p
 = 
cmd
;

188 
	}
}

191 
	$s3c2440_wrôe_addr
(
addr
)

193 
i
;

194 vﬁ©ûê*
p
 = (vﬁ©ûê*)&
s3c2440«nd
->
NFADDR
;

196 *
p
 = 
addr
 & 0xff;

197 
i
=0; i<10; i++);

198 *
p
 = (
addr
 >> 9) & 0xff;

199 
i
=0; i<10; i++);

200 *
p
 = (
addr
 >> 17) & 0xff;

201 
i
=0; i<10; i++);

202 *
p
 = (
addr
 >> 25) & 0xff;

203 
i
=0; i<10; i++);

204 
	}
}

207 
	$s3c2440_ªad_d©a
()

209 vﬁ©ûê*
p
 = (vﬁ©ûê*)&
s3c2440«nd
->
NFDATA
;

210  *
p
;

211 
	}
}

215 
	$«nd_ª£t
()

217 
«nd_chù
.
	`«nd_ª£t
();

218 
	}
}

220 
	$waô_idÀ
()

222 
«nd_chù
.
	`waô_idÀ
();

223 
	}
}

225 
	$«nd_£À˘_chù
()

227 
i
;

228 
«nd_chù
.
	`«nd_£À˘_chù
();

229 
i
=0; i<10; i++);

230 
	}
}

232 
	$«nd_de£À˘_chù
()

234 
«nd_chù
.
	`«nd_de£À˘_chù
();

235 
	}
}

237 
	$wrôe_cmd
(
cmd
)

239 
«nd_chù
.
	`wrôe_cmd
(
cmd
);

240 
	}
}

241 
	$wrôe_addr
(
addr
)

243 
«nd_chù
.
	`wrôe_addr
(
addr
);

244 
	}
}

246 
	$ªad_d©a
()

248  
«nd_chù
.
	`ªad_d©a
();

249 
	}
}

253 
	$«nd_öô
()

255 
	#TACLS
 0

	)

256 
	#TWRPH0
 3

	)

257 
	#TWRPH1
 0

	)

260 i‡((
GSTATUS1
 == 0x32410000) || (GSTATUS1 == 0x32410002))

262 
«nd_chù
.
«nd_ª£t
 = 
s3c2410_«nd_ª£t
;

263 
«nd_chù
.
waô_idÀ
 = 
s3c2410_waô_idÀ
;

264 
«nd_chù
.
«nd_£À˘_chù
 = 
s3c2410_«nd_£À˘_chù
;

265 
«nd_chù
.
«nd_de£À˘_chù
 = 
s3c2410_«nd_de£À˘_chù
;

266 
«nd_chù
.
wrôe_cmd
 = 
s3c2410_wrôe_cmd
;

267 
«nd_chù
.
wrôe_addr
 = 
s3c2410_wrôe_addr
;

268 
«nd_chù
.
ªad_d©a
 = 
s3c2410_ªad_d©a
;

271 
s3c2410«nd
->
NFCONF
 = (1<<15)|(1<<12)|(1<<11)|(
TACLS
<<8)|(
TWRPH0
<<4)|(
TWRPH1
<<0);

275 
«nd_chù
.
«nd_ª£t
 = 
s3c2440_«nd_ª£t
;

276 
«nd_chù
.
waô_idÀ
 = 
s3c2440_waô_idÀ
;

277 
«nd_chù
.
«nd_£À˘_chù
 = 
s3c2440_«nd_£À˘_chù
;

278 
«nd_chù
.
«nd_de£À˘_chù
 = 
s3c2440_«nd_de£À˘_chù
;

279 
«nd_chù
.
wrôe_cmd
 = 
s3c2440_wrôe_cmd
;

280 
«nd_chù
.
wrôe_addr
 = 
s3c2440_wrôe_addr
;

281 
«nd_chù
.
ªad_d©a
 = 
s3c2440_ªad_d©a
;

284 
s3c2440«nd
->
NFCONF
 = (
TACLS
<<12)|(
TWRPH0
<<8)|(
TWRPH1
<<4);

286 
s3c2440«nd
->
NFCONT
 = (1<<4)|(1<<1)|(1<<0);

290 
	`«nd_ª£t
();

291 
	}
}

294 
	#NAND_SECTOR_SIZE
 512

	)

295 
	#NAND_BLOCK_MASK
 (
NAND_SECTOR_SIZE
 - 1)

	)

298 
	$«nd_ªad
(*
buf
, 
°¨t_addr
, 
size
)

300 
i
, 
j
;

302 i‡((
°¨t_addr
 & 
NAND_BLOCK_MASK
Ë|| (
size
 & NAND_BLOCK_MASK)) {

307 
	`«nd_£À˘_chù
();

309 
i
=
°¨t_addr
; i < (°¨t_add∏+ 
size
);) {

311 
	`wrôe_cmd
(0);

314 
	`wrôe_addr
(
i
);

315 
	`waô_idÀ
();

317 
j
=0; j < 
NAND_SECTOR_SIZE
; j++, 
i
++) {

318 *
buf
 = 
	`ªad_d©a
();

319 
buf
++;

324 
	`«nd_de£À˘_chù
();

327 
	}
}

	@s3c24xx.h

2 
	#WTCON
 (*(vﬁ©ûê*)0x53000000)

	)

3 
	#WTDAT
 (*(vﬁ©ûê*)0x53000004)

	)

4 
	#WTCNT
 (*(vﬁ©ûê*)0x53000008)

	)

7 
	#MEM_CTL_BASE
 0x48000000

	)

8 
	#SDRAM_BASE
 0x30000000

	)

11 #ifde‡
S3C2410


12 
	#NFCONF
 (*(vﬁ©ûê*)0x4e000000)

	)

13 
	#NFCMD
 (*(vﬁ©ûê*)0x4e000004)

	)

14 
	#NFADDR
 (*(vﬁ©ûê*)0x4e000008)

	)

15 
	#NFDATA
 (*(vﬁ©ûê*)0x4e00000c)

	)

16 
	#NFSTAT
 (*(vﬁ©ûê*)0x4e000010)

	)

18 
	#NFCONF
 (*(vﬁ©ûê*)0x4e000000)

	)

19 
	#NFCONT
 (*(vﬁ©ûê*)0x4e000004)

	)

20 
	#NFCMD
 (*(vﬁ©ûê*)0x4e000008)

	)

21 
	#NFADDR
 (*(vﬁ©ûê*)0x4e00000C)

	)

22 
	#NFDATA
 (*(vﬁ©ûê*)0x4e000010)

	)

23 
	#NFSTAT
 (*(vﬁ©ûê*)0x4e000020)

	)

27 
	#GPACON
 (*(vﬁ©ûê*)0x56000000)

	)

28 
	#GPADAT
 (*(vﬁ©ûê*)0x56000004)

	)

30 
	#GPBCON
 (*(vﬁ©ûê*)0x56000010)

	)

31 
	#GPBDAT
 (*(vﬁ©ûê*)0x56000014)

	)

32 
	#GPBUP
 (*(vﬁ©ûê*)0x56000018)

	)

34 
	#GPCCON
 (*(vﬁ©ûê*)0x56000020)

	)

35 
	#GPCDAT
 (*(vﬁ©ûê*)0x56000024)

	)

36 
	#GPCUP
 (*(vﬁ©ûê*)0x56000028)

	)

38 
	#GPDCON
 (*(vﬁ©ûê*)0x56000030)

	)

39 
	#GPDDAT
 (*(vﬁ©ûê*)0x56000034)

	)

40 
	#GPDUP
 (*(vﬁ©ûê*)0x56000038)

	)

42 
	#GPECON
 (*(vﬁ©ûê*)0x56000040)

	)

43 
	#GPEDAT
 (*(vﬁ©ûê*)0x56000044)

	)

44 
	#GPEUP
 (*(vﬁ©ûê*)0x56000048)

	)

46 
	#GPFCON
 (*(vﬁ©ûê*)0x56000050)

	)

47 
	#GPFDAT
 (*(vﬁ©ûê*)0x56000054)

	)

48 
	#GPFUP
 (*(vﬁ©ûê*)0x56000058)

	)

50 
	#GPGCON
 (*(vﬁ©ûê*)0x56000060)

	)

51 
	#GPGDAT
 (*(vﬁ©ûê*)0x56000064)

	)

52 
	#GPGUP
 (*(vﬁ©ûê*)0x56000068)

	)

54 
	#GPHCON
 (*(vﬁ©ûê*)0x56000070)

	)

55 
	#GPHDAT
 (*(vﬁ©ûê*)0x56000074)

	)

56 
	#GPHUP
 (*(vﬁ©ûê*)0x56000078)

	)

61 
	#ULCON0
 (*(vﬁ©ûê*)0x50000000)

	)

62 
	#UCON0
 (*(vﬁ©ûê*)0x50000004)

	)

63 
	#UFCON0
 (*(vﬁ©ûê*)0x50000008)

	)

64 
	#UMCON0
 (*(vﬁ©ûê*)0x5000000c)

	)

65 
	#UTRSTAT0
 (*(vﬁ©ûê*)0x50000010)

	)

66 
	#UTXH0
 (*(vﬁ©ûê*)0x50000020)

	)

67 
	#URXH0
 (*(vﬁ©ûê*)0x50000024)

	)

68 
	#UBRDIV0
 (*(vﬁ©ûê*)0x50000028)

	)

72 
	#SRCPND
 (*(vﬁ©ûê*)0x4A000000)

	)

73 
	#INTMOD
 (*(vﬁ©ûê*)0x4A000004)

	)

74 
	#INTMSK
 (*(vﬁ©ûê*)0x4A000008)

	)

75 
	#PRIORITY
 (*(vﬁ©ûê*)0x4A00000c)

	)

76 
	#INTPND
 (*(vﬁ©ûê*)0x4A000010)

	)

77 
	#INTOFFSET
 (*(vﬁ©ûê*)0x4A000014)

	)

78 
	#SUBSRCPND
 (*(vﬁ©ûê*)0x4A000018)

	)

79 
	#INTSUBMSK
 (*(vﬁ©ûê*)0x4A00001c)

	)

82 
	#EINTMASK
 (*(vﬁ©ûê*)0x560000a4)

	)

83 
	#EINTPEND
 (*(vﬁ©ûê*)0x560000a8)

	)

86 
	#LOCKTIME
 (*(vﬁ©ûê*)0x4c000000)

	)

87 
	#MPLLCON
 (*(vﬁ©ûê*)0x4c000004)

	)

88 
	#UPLLCON
 (*(vﬁ©ûê*)0x4c000008)

	)

89 
	#CLKCON
 (*(vﬁ©ûê*)0x4c00000c)

	)

90 
	#CLKSLOW
 (*(vﬁ©ûê*)0x4c000010)

	)

91 
	#CLKDIVN
 (*(vﬁ©ûê*)0x4c000014)

	)

95 
	#TCFG0
 (*(vﬁ©ûê*)0x51000000)

	)

96 
	#TCFG1
 (*(vﬁ©ûê*)0x51000004)

	)

97 
	#TCON
 (*(vﬁ©ûê*)0x51000008)

	)

98 
	#TCNTB0
 (*(vﬁ©ûê*)0x5100000c)

	)

99 
	#TCMPB0
 (*(vﬁ©ûê*)0x51000010)

	)

100 
	#TCNTO0
 (*(vﬁ©ûê*)0x51000014)

	)

103 
	#IICCON
 (*(volatile *)0x54000000)

104 
	#IICSTAT
 (*(volatile *)0x54000004)

105 
	#IICADD
 (*(volatile *)0x54000008)

106 
	#IICDS
 (*(volatile *)0x5400000c)

107 

	)

109 
	#LCDCON1
 (*(volatile *)0x4d000000)

110 
	#LCDCON2
 (*(volatile *)0x4d000004)

111 
	#LCDCON3
 (*(volatile *)0x4d000008)

112 
	#LCDCON4
 (*(volatile *)0x4d00000c)

113 
	#LCDCON5
 (*(volatile *)0x4d000010)

114 
	#LCDSADDR1
 (*(volatile *)0x4d000014)

115 
	#LCDSADDR2
 (*(volatile *)0x4d000018)

116 
	#LCDSADDR3
 (*(volatile *)0x4d00001c)

117 
	#REDLUT
 (*(volatile *)0x4d000020)

118 
	#GREENLUT
 (*(volatile *)0x4d000024)

119 
	#BLUELUT
 (*(volatile *)0x4d000028)

120 
	#DITHMODE
 (*(volatile *)0x4d00004c)

121 
	#TPAL
 (*(volatile *)0x4d000050)

122 
	#LCDINTPND
 (*(volatile *)0x4d000054)

123 
	#LCDSRCPND
 (*(volatile *)0x4d000058)

124 
	#LCDINTMSK
 (*(volatile *)0x4d00005c)

125 
	#LPCSEL
 (*(volatile *)0x4d000060)

126 
	#PALETTE
 0x4d000400

127 

	)

128 
	#ISR_EINT0_OFT
 0

	)

129 
	#ISR_EINT1_OFT
 1

	)

130 
	#ISR_EINT2_OFT
 2

	)

131 
	#ISR_EINT3_OFT
 3

	)

132 
	#ISR_EINT4_7_OFT
 4

	)

133 
	#ISR_EINT8_23_OFT
 5

	)

134 
	#ISR_NOTUSED6_OFT
 6

	)

135 
	#ISR_BAT_FLT_OFT
 7

	)

136 
	#ISR_TICK_OFT
 8

	)

137 
	#ISR_WDT_OFT
 9

	)

138 
	#ISR_TIMER0_OFT
 10

	)

139 
	#ISR_TIMER1_OFT
 11

	)

140 
	#ISR_TIMER2_OFT
 12

	)

141 
	#ISR_TIMER3_OFT
 13

	)

142 
	#ISR_TIMER4_OFT
 14

	)

143 
	#ISR_UART2_OFT
 15

	)

144 
	#ISR_LCD_OFT
 16

	)

145 
	#ISR_DMA0_OFT
 17

	)

146 
	#ISR_DMA1_OFT
 18

	)

147 
	#ISR_DMA2_OFT
 19

	)

148 
	#ISR_DMA3_OFT
 20

	)

149 
	#ISR_SDI_OFT
 21

	)

150 
	#ISR_SPI0_OFT
 22

	)

151 
	#ISR_UART1_OFT
 23

	)

152 
	#ISR_NOTUSED24_OFT
 24

	)

153 
	#ISR_USBD_OFT
 25

	)

154 
	#ISR_USBH_OFT
 26

	)

155 
	#ISR_IIC_OFT
 27

	)

156 
	#ISR_UART0_OFT
 28

	)

157 
	#ISR_SPI1_OFT
 29

	)

158 
	#ISR_RTC_OFT
 30

	)

159 
	#ISR_ADC_OFT
 31

	)

163 
	#BIT_EINT0
 (0x1)

	)

164 
	#BIT_EINT1
 (0x1<<1)

	)

165 
	#BIT_EINT2
 (0x1<<2)

	)

166 
	#BIT_EINT3
 (0x1<<3)

	)

167 
	#BIT_EINT4_7
 (0x1<<4)

	)

168 
	#BIT_EINT8_23
 (0x1<<5)

	)

169 
	#BIT_CAM
 (0x1<<6)

170 
	#BIT_BAT_FLT
 (0x1<<7)

	)

171 
	#BIT_TICK
 (0x1<<8)

	)

172 
	#BIT_WDT_AC97
 (0x1<<9)

	)

173 
	#BIT_TIMER0
 (0x1<<10)

	)

174 
	#BIT_TIMER1
 (0x1<<11)

	)

175 
	#BIT_TIMER2
 (0x1<<12)

	)

176 
	#BIT_TIMER3
 (0x1<<13)

	)

177 
	#BIT_TIMER4
 (0x1<<14)

	)

178 
	#BIT_UART2
 (0x1<<15)

	)

179 
	#BIT_LCD
 (0x1<<16)

	)

180 
	#BIT_DMA0
 (0x1<<17)

	)

181 
	#BIT_DMA1
 (0x1<<18)

	)

182 
	#BIT_DMA2
 (0x1<<19)

	)

183 
	#BIT_DMA3
 (0x1<<20)

	)

184 
	#BIT_SDI
 (0x1<<21)

	)

185 
	#BIT_SPI0
 (0x1<<22)

	)

186 
	#BIT_UART1
 (0x1<<23)

	)

187 
	#BIT_NFCON
 (0x1<<24)

188 
	#BIT_USBD
 (0x1<<25)

	)

189 
	#BIT_USBH
 (0x1<<26)

	)

190 
	#BIT_IIC
 (0x1<<27)

	)

191 
	#BIT_UART0
 (0x1<<28)

	)

192 
	#BIT_SPI1
 (0x1<<29)

	)

193 
	#BIT_RTC
 (0x1<<30)

	)

194 
	#BIT_ADC
 (0x1<<31)

	)

195 
	#BIT_ALLMSK
 (0xffffffff)

	)

197 
	#BIT_SUB_ALLMSK
 (0x7fff)

	)

198 
	#BIT_SUB_AC97
 (0x1<<14)

	)

199 
	#BIT_SUB_WDT
 (0x1<<13)

	)

200 
	#BIT_SUB_CAM_S
 (0x1<<12)

201 
	#BIT_SUB_CAM_C
 (0x1<<11)

202 
	#BIT_SUB_ADC
 (0x1<<10)

	)

203 
	#BIT_SUB_TC
 (0x1<<9)

	)

204 
	#BIT_SUB_ERR2
 (0x1<<8)

	)

205 
	#BIT_SUB_TXD2
 (0x1<<7)

	)

206 
	#BIT_SUB_RXD2
 (0x1<<6)

	)

207 
	#BIT_SUB_ERR1
 (0x1<<5)

	)

208 
	#BIT_SUB_TXD1
 (0x1<<4)

	)

209 
	#BIT_SUB_RXD1
 (0x1<<3)

	)

210 
	#BIT_SUB_ERR0
 (0x1<<2)

	)

211 
	#BIT_SUB_TXD0
 (0x1<<1)

	)

212 
	#BIT_SUB_RXD0
 (0x1<<0)

	)

214 
	#GSTATUS1
 (*(vﬁ©ûê*)0x560000B0)

	)

	@serial.c

1 
	~"s3c24xx.h
"

2 
	~"£rül.h
"

4 
	#TXD0READY
 (1<<2)

	)

5 
	#RXD0READY
 (1)

	)

7 
	#PCLK
 50000000

8 
	#UART_CLK
 
PCLK


9 
	#UART_BAUD_RATE
 115200

10 
	#UART_BRD
 ((
UART_CLK
 / (
UART_BAUD_RATE
 * 16)Ë- 1)

	)

16 
	$u¨t0_öô
()

18 
GPHCON
 |= 0xa0;

19 
GPHUP
 = 0x0c;

21 
ULCON0
 = 0x03;

22 
UCON0
 = 0x05;

23 
UFCON0
 = 0x00;

24 
UMCON0
 = 0x00;

25 
UBRDIV0
 = 
UART_BRD
;

26 
	}
}

31 
	$putc
(
c
)

34 !(
UTRSTAT0
 & 
TXD0READY
));

37 
UTXH0
 = 
c
;

38 
	}
}

43 
	$gëc
()

46 !(
UTRSTAT0
 & 
RXD0READY
));

49  
URXH0
;

50 
	}
}

55 
	$isDigô
(
c
)

57 i‡(
c
 >= '0' && c <= '9')

61 
	}
}

66 
	$isLëãr
(
c
)

68 i‡(
c
 >= 'a' && c <= 'z')

70 i‡(
c
 >= 'A' && c <= 'Z')

74 
	}
}

	@serial.h

1 
u¨t0_öô
();

2 
putc
(
c
);

3 
gëc
();

4 
isDigô
(
c
);

5 
isLëãr
(
c
);

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #ifde‡
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #ifde‡
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/printf.h

18 #i‚def 
_PRINTF_H


20 
	#_PRINTF_H
 1

	)

21 
	~<„©uªs.h
>

23 
	g__BEGIN_DECLS


25 
	#__√ed_FILE


	)

26 
	~<°dio.h
>

27 
	#__√ed_size_t


	)

28 
	#__√ed_wch¨_t


	)

29 
	~<°ddef.h
>

30 
	~<°d¨g.h
>

33 
	s¥ötf_öfo


35 
	m¥ec
;

36 
	mwidth
;

37 
wch¨_t
 
	m•ec
;

38 
	mis_l⁄g_doubÀ
:1;

39 
	mis_sh‹t
:1;

40 
	mis_l⁄g
:1;

41 
	mÆt
:1;

42 
	m•a˚
:1;

43 
	mÀ·
:1;

44 
	mshowsign
:1;

45 
	mgroup
:1;

46 
	mexåa
:1;

47 
	mis_ch¨
:1;

48 
	mwide
:1;

49 
	mi18n
:1;

50 
	m__∑d
:4;

51 
	mu£r
;

52 
wch¨_t
 
	m∑d
;

66 
	t¥ötf_fun˘i⁄
 (
	tFILE
 *
	t__°ªam
,

67 c⁄° 
	t¥ötf_öfo
 *
	t__öfo
,

68 c⁄° *c⁄° *
	t__¨gs
);

78 
	t¥ötf_¨göfo_size_fun˘i⁄
 (c⁄° 
	t¥ötf_öfo
 *
	t__öfo
,

79 
	tsize_t
 
	t__n
, *
	t__¨gty≥s
,

80 *
	t__size
);

84 
	t¥ötf_¨göfo_fun˘i⁄
 (c⁄° 
	t¥ötf_öfo
 *
	t__öfo
,

85 
	tsize_t
 
	t__n
, *
	t__¨gty≥s
);

89 
	t¥ötf_va_¨g_fun˘i⁄
 (*
	t__mem
, 
	tva_li°
 *
	t__≠
);

96 
	$ªgi°î_¥ötf_•ecifõr
 (
__•ec
, 
¥ötf_fun˘i⁄
 
__func
,

97 
¥ötf_¨göfo_size_fun˘i⁄
 
__¨göfo
)

98 
__THROW
;

105 
	$ªgi°î_¥ötf_fun˘i⁄
 (
__•ec
, 
¥ötf_fun˘i⁄
 
__func
,

106 
¥ötf_¨göfo_fun˘i⁄
 
__¨göfo
)

107 
__THROW
 
__©åibuã_dïªˇãd__
;

114 
	$ªgi°î_¥ötf_modifõr
 (c⁄° 
wch¨_t
 *
__°r
Ë
__wur
 
__THROW
;

120 
	$ªgi°î_¥ötf_ty≥
 (
¥ötf_va_¨g_fun˘i⁄
 
__f˘
Ë
__wur
 
__THROW
;

134 
size_t
 
	$∑r£_¥ötf_f‹m©
 (c⁄° *
__ª°ri˘
 
__fmt
, 
size_t
 
__n
,

135 *
__ª°ri˘
 
__¨gty≥s
Ë
__THROW
;

146 
PA_INT
,

147 
PA_CHAR
,

148 
PA_WCHAR
,

149 
PA_STRING
,

150 
PA_WSTRING
,

151 
PA_POINTER
,

152 
PA_FLOAT
,

153 
PA_DOUBLE
,

154 
PA_LAST


158 
	#PA_FLAG_MASK
 0xff00

	)

159 
	#PA_FLAG_LONG_LONG
 (1 << 8)

	)

160 
	#PA_FLAG_LONG_DOUBLE
 
PA_FLAG_LONG_LONG


	)

161 
	#PA_FLAG_LONG
 (1 << 9)

	)

162 
	#PA_FLAG_SHORT
 (1 << 10)

	)

163 
	#PA_FLAG_PTR
 (1 << 11)

	)

173 
	$¥ötf_size
 (
FILE
 *
__ª°ri˘
 
__Â
,

174 c⁄° 
¥ötf_öfo
 *
__öfo
,

175 c⁄° *c⁄° *
__ª°ri˘
 
__¨gs
Ë
__THROW
;

178 
	$¥ötf_size_öfo
 (c⁄° 
¥ötf_öfo
 *
__ª°ri˘


179 
__öfo
, 
size_t
 
__n
, *
__ª°ri˘
 
__¨gty≥s
)

180 
__THROW
;

182 #ifde‡
__LDBL_COMPAT


183 
	~<bôs/¥ötf-ldbl.h
>

186 
__END_DECLS


	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_MISC


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #ifde‡
__USE_POSIX


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #ifde‡
__USE_POSIX


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #ifde‡
__USE_POSIX2


872 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

878 
	`p˛o£
 (
FILE
 *
__°ªam
);

882 #ifdef 
__USE_POSIX


884 *
	$˘îmid
 (*
__s
Ë
__THROW
;

888 #ifde‡
__USE_XOPEN


890 *
	`cu£rid
 (*
__s
);

894 #ifdef 
__USE_GNU


895 
ob°ack
;

898 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

899 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

900 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

901 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

902 c⁄° *
__ª°ri˘
 
__f‹m©
,

903 
_G_va_li°
 
__¨gs
)

904 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

908 #ifde‡
__USE_POSIX


912 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

916 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

919 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

922 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


926 
	#__√ed_gë›t


	)

927 
	~<gë›t.h
>

932 #ifde‡
__USE_EXTERN_INLINES


933 
	~<bôs/°dio.h
>

935 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


936 
	~<bôs/°dio2.h
>

938 #ifde‡
__LDBL_COMPAT


939 
	~<bôs/°dio-ldbl.h
>

942 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

36 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

40 
__BEGIN_NAMESPACE_STD


42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 
__END_NAMESPACE_STD


53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 
__BEGIN_NAMESPACE_STD


62 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

69 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


72 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

74 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__OPTIMIZE__


78 
__exã∫_Æways_ölöe
 *

79 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


81  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

84 
__exã∫_Æways_ölöe
 const *

85 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


87  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

90 
	}
}

92 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

93 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 
__END_NAMESPACE_STD


97 #ifde‡
__USE_GNU


100 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


101 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


112 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

123 
__BEGIN_NAMESPACE_STD


125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

153 
__END_NAMESPACE_STD


155 #ifde‡
__USE_XOPEN2K8


159 
	~<xloˇÀ.h
>

162 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

163 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

165 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

166 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

169 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


171 *
	$°rdup
 (c⁄° *
__s
)

172 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_XOPEN2K8


179 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

180 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


185 
	#°rdu∑
(
s
) \

186 (
__exãnsi⁄__
 \

188 c⁄° *
__ﬁd
 = (
s
); \

189 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

190 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

191 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

192 
	}
}))

	)

195 
	#°∫du∑
(
s
, 
n
) \

196 (
__exãnsi⁄__
 \

198 c⁄° *
__ﬁd
 = (
s
); \

199 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

200 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

201 
__√w
[
__Àn
] = '\0'; \

202 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

203 }))

	)

206 
	g__BEGIN_NAMESPACE_STD


208 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


211 *
°rchr
 (*
__s
, 
__c
)

212 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

213 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

216 #ifde‡
__OPTIMIZE__


217 
__exã∫_Æways_ölöe
 *

218 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


220  
__buûtö_°rchr
 (
__s
, 
__c
);

223 
__exã∫_Æways_ölöe
 const *

224 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


226  
__buûtö_°rchr
 (
__s
, 
__c
);

231 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

232 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

235 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


238 *
	`°ºchr
 (*
__s
, 
__c
)

239 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

243 #ifde‡
__OPTIMIZE__


244 
__exã∫_Æways_ölöe
 *

245 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


247  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

250 
__exã∫_Æways_ölöe
 const *

251 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


253  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

256 
	}
}

258 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

259 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

261 
__END_NAMESPACE_STD


263 #ifde‡
__USE_GNU


266 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


267 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

268 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

269 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

272 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

273 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 
__BEGIN_NAMESPACE_STD


280 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

281 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

284 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


290 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

291 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 #ifde‡
__OPTIMIZE__


296 
__exã∫_Æways_ölöe
 *

297 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


299  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

302 
__exã∫_Æways_ölöe
 const *

303 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


305  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

308 
	}
}

310 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

311 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

314 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


317 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

318 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

322 #ifde‡
__OPTIMIZE__


323 
__exã∫_Æways_ölöe
 *

324 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


326  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

329 
__exã∫_Æways_ölöe
 const *

330 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


332  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

335 
	}
}

337 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

338 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

343 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

344 
__THROW
 
	`__n⁄nuŒ
 ((2));

345 
__END_NAMESPACE_STD


349 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

350 c⁄° *
__ª°ri˘
 
__dñim
,

351 **
__ª°ri˘
 
__ßve_±r
)

352 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

353 #ifde‡
__USE_POSIX


354 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

355 **
__ª°ri˘
 
__ßve_±r
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

359 #ifde‡
__USE_GNU


361 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


362 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

363 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

364 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

365 c⁄° *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

368 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

369 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 #ifde‡
__USE_GNU


377 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

378 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

379 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

383 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

384 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

385 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

387 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

392 
__BEGIN_NAMESPACE_STD


394 
size_t
 
	$°æí
 (c⁄° *
__s
)

395 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

396 
__END_NAMESPACE_STD


398 #ifdef 
__USE_XOPEN2K8


401 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

402 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

406 
__BEGIN_NAMESPACE_STD


408 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

409 
__END_NAMESPACE_STD


410 #ifde‡
__USE_XOPEN2K


418 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


421 #ifde‡
__REDIRECT_NTH


422 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

423 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

424 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

426 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

427 
__THROW
 
	`__n⁄nuŒ
 ((2));

428 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

433 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

434 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

438 #ifde‡
__USE_XOPEN2K8


440 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

446 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

448 #ifde‡
__USE_MISC


450 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

451 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

457 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

458 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

461 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


464 *
	`ödex
 (*
__s
, 
__c
)

465 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

466 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

467 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


470 
__exã∫_Æways_ölöe
 *

471 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


473  
	`__buûtö_ödex
 (
__s
, 
__c
);

476 
__exã∫_Æways_ölöe
 const *

477 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


479  
	`__buûtö_ödex
 (
__s
, 
__c
);

482 
	}
}

484 *
	$ödex
 (c⁄° *
__s
, 
__c
)

485 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

489 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


492 *
	`rödex
 (*
__s
, 
__c
)

493 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

495 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


498 
__exã∫_Æways_ölöe
 *

499 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


501  
	`__buûtö_rödex
 (
__s
, 
__c
);

504 
__exã∫_Æways_ölöe
 const *

505 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


507  
	`__buûtö_rödex
 (
__s
, 
__c
);

510 
	}
}

512 *
	$rödex
 (c⁄° *
__s
, 
__c
)

513 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

518 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

522 #ifdef 
__USE_GNU


523 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

524 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

525 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

530 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

533 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

534 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

537 #ifdef 
__USE_GNU


540 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

541 
__loˇÀ_t
 
__loc
)

542 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

544 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

545 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

546 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

549 #ifdef 
__USE_MISC


552 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

553 c⁄° *
__ª°ri˘
 
__dñim
)

554 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifdef 
__USE_XOPEN2K8


559 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

562 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

563 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

570 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

573 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 #ifdef 
__USE_GNU


579 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

580 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

583 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

586 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

588 #i‚de‡
ba£«me


593 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


594 "C++" *
	$ba£«me
 (*
__fûíame
)

595 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

596 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

597 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

599 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

605 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

606 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

607 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


627 
	~<bôs/°rög.h
>

630 
	~<bôs/°rög2.h
>

633 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


635 
	~<bôs/°rög3.h
>

639 #i‡
deföed
 
__USE_GNU
 && deföed 
__OPTIMIZE__
 \

640 && 
deföed
 
__exã∫_Æways_ölöe
 && 
	$__GNUC_PREREQ
 (3,2)

641 #i‡!
deföed
 
_FORCE_INLINES
 && !deföed 
_HAVE_STRING_ARCH_memp˝y


643 #unde‡
memp˝y


644 #unde‡
__memp˝y


645 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

646 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

648 
__exã∫_Æways_ölöe
 *

649 
	$__memp˝y_ölöe
 (*
__ª°ri˘
 
__de°
,

650 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

652  (*Ë
	`mem˝y
 (
__de°
, 
__§c
, 
__n
) + __n;

653 
	}
}

658 
	g__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_MISC


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC11


98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_ISOCXX11


101 #unde‡
__USE_POSIX


102 #unde‡
__USE_POSIX2


103 #unde‡
__USE_POSIX199309


104 #unde‡
__USE_POSIX199506


105 #unde‡
__USE_XOPEN


106 #unde‡
__USE_XOPEN_EXTENDED


107 #unde‡
__USE_UNIX98


108 #unde‡
__USE_XOPEN2K


109 #unde‡
__USE_XOPEN2KXSI


110 #unde‡
__USE_XOPEN2K8


111 #unde‡
__USE_XOPEN2K8XSI


112 #unde‡
__USE_LARGEFILE


113 #unde‡
__USE_LARGEFILE64


114 #unde‡
__USE_FILE_OFFSET64


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

146 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

147 && !
deföed
 
	g_DEFAULT_SOURCE


152 #unde‡
_DEFAULT_SOURCE


153 
	#_DEFAULT_SOURCE
 1

	)

157 #ifde‡
_GNU_SOURCE


158 #unde‡
_ISOC95_SOURCE


159 
	#_ISOC95_SOURCE
 1

	)

160 #unde‡
_ISOC99_SOURCE


161 
	#_ISOC99_SOURCE
 1

	)

162 #unde‡
_ISOC11_SOURCE


163 
	#_ISOC11_SOURCE
 1

	)

164 #unde‡
_POSIX_SOURCE


165 
	#_POSIX_SOURCE
 1

	)

166 #unde‡
_POSIX_C_SOURCE


167 
	#_POSIX_C_SOURCE
 200809L

	)

168 #unde‡
_XOPEN_SOURCE


169 
	#_XOPEN_SOURCE
 700

	)

170 #unde‡
_XOPEN_SOURCE_EXTENDED


171 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

172 #unde‡
_LARGEFILE64_SOURCE


173 
	#_LARGEFILE64_SOURCE
 1

	)

174 #unde‡
_DEFAULT_SOURCE


175 
	#_DEFAULT_SOURCE
 1

	)

176 #unde‡
_ATFILE_SOURCE


177 
	#_ATFILE_SOURCE
 1

	)

182 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

183 || (!
deföed
 
	g__STRICT_ANSI__
 \

184 && !
deföed
 
	g_ISOC99_SOURCE
 \

185 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

186 && !
deföed
 
	g_XOPEN_SOURCE
))

187 #unde‡
_DEFAULT_SOURCE


188 
	#_DEFAULT_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC11_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

194 
	#__USE_ISOC11
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

200 
	#__USE_ISOC99
 1

	)

204 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

205 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

206 
	#__USE_ISOC95
 1

	)

213 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

214 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

215 
	#__USE_ISOCXX11
 1

	)

221 #ifde‡
_DEFAULT_SOURCE


222 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


223 
	#__USE_POSIX_IMPLICITLY
 1

	)

225 #unde‡
_POSIX_SOURCE


226 
	#_POSIX_SOURCE
 1

	)

227 #unde‡
_POSIX_C_SOURCE


228 
	#_POSIX_C_SOURCE
 200809L

	)

230 #i‡((!
deföed
 
__STRICT_ANSI__
 \

231 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

232 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

233 
	#_POSIX_SOURCE
 1

	)

234 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

235 
	#_POSIX_C_SOURCE
 2

	)

236 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

237 
	#_POSIX_C_SOURCE
 199506L

	)

238 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

239 
	#_POSIX_C_SOURCE
 200112L

	)

241 
	#_POSIX_C_SOURCE
 200809L

	)

243 
	#__USE_POSIX_IMPLICITLY
 1

	)

246 #i‡(
deföed
 
_POSIX_SOURCE
 \

247 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

248 || 
deföed
 
_XOPEN_SOURCE
)

249 
	#__USE_POSIX
 1

	)

252 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


253 
	#__USE_POSIX2
 1

	)

256 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

257 
	#__USE_POSIX199309
 1

	)

260 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

261 
	#__USE_POSIX199506
 1

	)

264 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

265 
	#__USE_XOPEN2K
 1

	)

266 #unde‡
__USE_ISOC95


267 
	#__USE_ISOC95
 1

	)

268 #unde‡
__USE_ISOC99


269 
	#__USE_ISOC99
 1

	)

272 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

273 
	#__USE_XOPEN2K8
 1

	)

274 #unde‡
_ATFILE_SOURCE


275 
	#_ATFILE_SOURCE
 1

	)

278 #ifdef 
_XOPEN_SOURCE


279 
	#__USE_XOPEN
 1

	)

280 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

281 
	#__USE_XOPEN_EXTENDED
 1

	)

282 
	#__USE_UNIX98
 1

	)

283 #unde‡
_LARGEFILE_SOURCE


284 
	#_LARGEFILE_SOURCE
 1

	)

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

286 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

287 
	#__USE_XOPEN2K8
 1

	)

288 
	#__USE_XOPEN2K8XSI
 1

	)

290 
	#__USE_XOPEN2K
 1

	)

291 
	#__USE_XOPEN2KXSI
 1

	)

292 #unde‡
__USE_ISOC95


293 
	#__USE_ISOC95
 1

	)

294 #unde‡
__USE_ISOC99


295 
	#__USE_ISOC99
 1

	)

298 #ifde‡
_XOPEN_SOURCE_EXTENDED


299 
	#__USE_XOPEN_EXTENDED
 1

	)

304 #ifde‡
_LARGEFILE_SOURCE


305 
	#__USE_LARGEFILE
 1

	)

308 #ifde‡
_LARGEFILE64_SOURCE


309 
	#__USE_LARGEFILE64
 1

	)

312 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

313 
	#__USE_FILE_OFFSET64
 1

	)

316 #i‡
deföed
 
_DEFAULT_SOURCE


317 
	#__USE_MISC
 1

	)

320 #ifdef 
_ATFILE_SOURCE


321 
	#__USE_ATFILE
 1

	)

324 #ifdef 
_GNU_SOURCE


325 
	#__USE_GNU
 1

	)

328 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


329 
	#__USE_REENTRANT
 1

	)

332 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

333 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

334 #i‡
_FORTIFY_SOURCE
 > 1

335 
	#__USE_FORTIFY_LEVEL
 2

	)

337 
	#__USE_FORTIFY_LEVEL
 1

	)

340 
	#__USE_FORTIFY_LEVEL
 0

	)

345 
	~<°dc-¥edef.h
>

353 #unde‡
__GNU_LIBRARY__


354 
	#__GNU_LIBRARY__
 6

	)

358 
	#__GLIBC__
 2

	)

359 
	#__GLIBC_MINOR__
 23

	)

361 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

362 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

365 #i‚de‡
__ASSEMBLER__


366 #i‚de‡
_SYS_CDEFS_H


367 
	~<sys/cdefs.h
>

372 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


373 
	#__USE_LARGEFILE
 1

	)

374 
	#__USE_LARGEFILE64
 1

	)

380 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

381 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

382 && 
deföed
 
	g__exã∫_ölöe


383 
	#__USE_EXTERN_INLINES
 1

	)

391 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


150 
	t_IO_lock_t
;

156 
	s_IO_m¨kî
 {

157 
_IO_m¨kî
 *
	m_√xt
;

158 
_IO_FILE
 *
	m_sbuf
;

162 
	m_pos
;

164 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

165 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

166 
	mpublic
:

167 
°ªamm¨kî
(
°ªambuf
 *
sb
);

168 ~
°ªamm¨kî
();

169 
ßvög
(Ë{  
	m_•os
 == -2; }

170 
dñè
(
°ªamm¨kî
&);

171 
dñè
();

176 
	e__codecvt_ªsu…


178 
	m__codecvt_ok
,

179 
	m__codecvt_∑πül
,

180 
	m__codecvt_îr‹
,

181 
	m__codecvt_noc⁄v


184 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


187 
	s_IO_codecvt


189 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

190 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

191 
	m__mb°©e_t
 *,

192 c⁄° 
	mwch¨_t
 *,

193 c⁄° 
	mwch¨_t
 *,

194 c⁄° 
	mwch¨_t
 **, *,

196 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

197 
	m__mb°©e_t
 *, *,

199 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

200 
	m__mb°©e_t
 *,

202 c⁄° **, 
	mwch¨_t
 *,

203 
	mwch¨_t
 *, wchar_t **);

204 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

205 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

206 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

207 c⁄° *, c⁄° *, 
	m_IO_size_t
);

208 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

210 
_IO_ic⁄v_t
 
	m__cd_ö
;

211 
_IO_ic⁄v_t
 
	m__cd_out
;

215 
	s_IO_wide_d©a


217 
wch¨_t
 *
	m_IO_ªad_±r
;

218 
wch¨_t
 *
	m_IO_ªad_íd
;

219 
wch¨_t
 *
	m_IO_ªad_ba£
;

220 
wch¨_t
 *
	m_IO_wrôe_ba£
;

221 
wch¨_t
 *
	m_IO_wrôe_±r
;

222 
wch¨_t
 *
	m_IO_wrôe_íd
;

223 
wch¨_t
 *
	m_IO_buf_ba£
;

224 
wch¨_t
 *
	m_IO_buf_íd
;

226 
wch¨_t
 *
	m_IO_ßve_ba£
;

227 
wch¨_t
 *
	m_IO_backup_ba£
;

229 
wch¨_t
 *
	m_IO_ßve_íd
;

231 
__mb°©e_t
 
	m_IO_°©e
;

232 
__mb°©e_t
 
	m_IO_œ°_°©e
;

233 
_IO_codecvt
 
	m_codecvt
;

235 
wch¨_t
 
	m_sh‹tbuf
[1];

237 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

241 
	s_IO_FILE
 {

242 
	m_Êags
;

243 
	#_IO_fûe_Êags
 
_Êags


	)

247 * 
	m_IO_ªad_±r
;

248 * 
	m_IO_ªad_íd
;

249 * 
	m_IO_ªad_ba£
;

250 * 
	m_IO_wrôe_ba£
;

251 * 
	m_IO_wrôe_±r
;

252 * 
	m_IO_wrôe_íd
;

253 * 
	m_IO_buf_ba£
;

254 * 
	m_IO_buf_íd
;

256 *
	m_IO_ßve_ba£
;

257 *
	m_IO_backup_ba£
;

258 *
	m_IO_ßve_íd
;

260 
_IO_m¨kî
 *
	m_m¨kîs
;

262 
_IO_FILE
 *
	m_chaö
;

264 
	m_fûío
;

266 
	m_blksize
;

268 
	m_Êags2
;

270 
_IO_off_t
 
	m_ﬁd_off£t
;

272 
	#__HAVE_COLUMN


	)

274 
	m_cur_cﬁumn
;

275 sig√d 
	m_vèbÀ_off£t
;

276 
	m_sh‹tbuf
[1];

280 
_IO_lock_t
 *
	m_lock
;

281 #ifde‡
_IO_USE_OLD_IO_FILE


284 
	s_IO_FILE_com∂ëe


286 
_IO_FILE
 
	m_fûe
;

288 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

289 
_IO_off64_t
 
	m_off£t
;

290 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


292 
_IO_codecvt
 *
	m_codecvt
;

293 
_IO_wide_d©a
 *
	m_wide_d©a
;

294 
_IO_FILE
 *
	m_‰ìªs_li°
;

295 *
	m_‰ìªs_buf
;

297 *
	m__∑d1
;

298 *
	m__∑d2
;

299 *
	m__∑d3
;

300 *
	m__∑d4
;

302 
size_t
 
	m__∑d5
;

303 
	m_mode
;

305 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

309 #i‚de‡
__˝lu•lus


310 
_IO_FILE
 
	t_IO_FILE
;

313 
	g_IO_FILE_∂us
;

315 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

316 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

317 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

318 #i‚de‡
_LIBC


319 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

320 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

321 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

323 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

324 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

325 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

333 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

341 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

342 
	tsize_t
 
	t__n
);

350 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

353 
	t__io_˛o£_‚
 (*
	t__cookõ
);

356 #ifde‡
_GNU_SOURCE


358 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

359 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

360 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

361 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

366 
__io_ªad_‚
 *
	mªad
;

367 
__io_wrôe_‚
 *
	mwrôe
;

368 
__io_£ek_‚
 *
	m£ek
;

369 
__io_˛o£_‚
 *
	m˛o£
;

370 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

371 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

373 
	g_IO_cookõ_fûe
;

376 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

377 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

381 #ifde‡
__˝lu•lus


385 
__undîÊow
 (
_IO_FILE
 *);

386 
__uÊow
 (
_IO_FILE
 *);

387 
__ovîÊow
 (
_IO_FILE
 *, );

388 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


389 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

390 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

391 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

394 #i‡ 
__GNUC__
 >= 3

395 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

397 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

400 
	#_IO_gëc_u∆ocked
(
_Â
) \

401 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

402 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

403 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

404 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

405 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

406 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

407 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

408 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

409 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

410 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

412 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


413 
	#_IO_gëwc_u∆ocked
(
_Â
) \

414 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

415 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

416 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

417 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

418 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

422 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

423 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

426 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

427 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

429 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

430 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

431 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

432 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

434 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

437 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

438 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

440 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

441 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

442 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

444 #ifde‡
_IO_MTSAFE_IO


445 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

446 
	#_IO_Êockfûe
(
_Â
) \

447 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

448 
	#_IO_fu∆ockfûe
(
_Â
) \

449 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

451 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

452 
	#_IO_Êockfûe
(
_Â
Ë

	)

453 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

454 
	#_IO_·rylockfûe
(
_Â
Ë

	)

455 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

456 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

459 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

460 
_IO_va_li°
, *
__ª°ri˘
);

461 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

462 
_IO_va_li°
);

463 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

464 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

466 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

467 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

469 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

471 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


472 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

473 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

474 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

475 #i‡
__GNUC__
 >= 2

478 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


479 
	~<shlib-com∑t.h
>

480 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

481 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

482 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

483 c⁄° 
_IO_°dö_u£d
;

484 
wók_exã∫
 (
_IO_°dö_u£d
);

487 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


488 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

492 
	#_IO_fwide
(
__Â
, 
__mode
) \

493 ({ 
__ªsu…
 = (
__mode
); \

494 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

496 i‡((
__Â
)->
_mode
 == 0) \

498 (
__Â
)->
_mode
 = -1; \

499 
__ªsu…
 = (
__Â
)->
_mode
; \

501 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

502 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

504 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

505 
__ªsu…
; })

	)

508 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

509 
_IO_va_li°
, *
__ª°ri˘
);

510 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

511 
_IO_va_li°
);

512 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

513 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

516 #ifde‡
__LDBL_COMPAT


517 
	~<bôs/libio-ldbl.h
>

520 #ifde‡
__˝lu•lus


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

55 
	#__STDC_ISO_10646__
 201505L

	)

58 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004,

60 
	m__GCONV_TRANSLIT
 = 0x0008

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 
	s__gc⁄v_°ï


86 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

87 c⁄° *
__mod«me
;

89 
__cou¡î
;

91 *
__‰om_«me
;

92 *
__to_«me
;

94 
__gc⁄v_f˘
 
__f˘
;

95 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

96 
__gc⁄v_öô_f˘
 
__öô_f˘
;

97 
__gc⁄v_íd_f˘
 
__íd_f˘
;

101 
__mö_√eded_‰om
;

102 
__max_√eded_‰om
;

103 
__mö_√eded_to
;

104 
__max_√eded_to
;

107 
__°©eful
;

109 *
__d©a
;

114 
	s__gc⁄v_°ï_d©a


116 *
__outbuf
;

117 *
__outbu„nd
;

121 
__Êags
;

125 
__övoˇti⁄_cou¡î
;

129 
__öã∫Æ_u£
;

131 
__mb°©e_t
 *
__°©ï
;

132 
__mb°©e_t
 
__°©e
;

138 
	s__gc⁄v_öfo


140 
size_t
 
__n°ïs
;

141 
__gc⁄v_°ï
 *
__°ïs
;

142 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

143 } *
	t__gc⁄v_t
;

146 
	`__gc⁄v_å™¶ôî©e
 (
__gc⁄v_°ï
 *
°ï
,

147 
__gc⁄v_°ï_d©a
 *
°ï_d©a
,

148 c⁄° *
öbuf°¨t
,

149 c⁄° **
öbuÂ
,

150 c⁄° *
öbu„nd
,

151 **
outbuf°¨t
,

152 
size_t
 *
úªvîsibÀ
);

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

149 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

152 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

154 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

157 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

158 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

159 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

161 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

163 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

166 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

169 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

170 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

171 
__END_NAMESPACE_STD


173 #ifde‡
__USE_XOPEN2K8


175 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

178 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

179 
size_t
 
__n
Ë
__THROW
;

183 
	~<xloˇÀ.h
>

185 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
__loˇÀ_t
 
__loc
Ë
__THROW
;

188 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

189 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

192 
__BEGIN_NAMESPACE_STD


195 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

199 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

200 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

201 
__END_NAMESPACE_STD


203 #ifde‡
__USE_XOPEN2K8


209 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

210 
__loˇÀ_t
 
__loc
Ë
__THROW
;

215 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

216 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

219 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

222 
__BEGIN_NAMESPACE_STD


224 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


225 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

226 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

230 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

231 
__THROW
 
__©åibuã_puª__
;

234 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


235 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

236 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

240 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

241 
__THROW
 
__©åibuã_puª__
;

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_GNU


248 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

249 
__THROW
 
__©åibuã_puª__
;

252 
__BEGIN_NAMESPACE_STD


255 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

256 
__THROW
 
__©åibuã_puª__
;

259 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

260 
__THROW
 
__©åibuã_puª__
;

262 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


263 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

265 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

266 c⁄° 
wch¨_t
 *
__ac˚±
)

267 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

269 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

270 
__THROW
 
__©åibuã_puª__
;

273 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


274 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

276 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

277 c⁄° 
wch¨_t
 *
__√edÀ
)

278 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

280 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

281 
__THROW
 
__©åibuã_puª__
;

285 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

287 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

290 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

291 
__END_NAMESPACE_STD


293 #ifde‡
__USE_XOPEN


295 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


296 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

298 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

299 c⁄° 
wch¨_t
 *
__√edÀ
)

300 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

302 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

303 
__THROW
 
__©åibuã_puª__
;

307 #ifde‡
__USE_XOPEN2K8


309 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

310 
__THROW
 
__©åibuã_puª__
;

314 
__BEGIN_NAMESPACE_STD


316 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


317 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

319 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

320 
size_t
 
__n
)

321 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

323 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

328 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

329 
__THROW
 
__©åibuã_puª__
;

332 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

333 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

337 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

338 
__THROW
;

341 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

342 
__END_NAMESPACE_STD


344 #ifde‡
__USE_GNU


347 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

348 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

349 
__THROW
;

353 
__BEGIN_NAMESPACE_STD


356 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

360 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

364 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

368 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

369 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

370 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

373 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

377 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

378 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

379 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

380 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

381 
__END_NAMESPACE_STD


383 #ifde‡
__USE_EXTERN_INLINES


389 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

390 
__exã∫_ölöe
 
wöt_t


391 
	`__NTH
 (
	$btowc
 (
__c
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

393 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

395 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

396 
__exã∫_ölöe
 

397 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

398 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

399 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

401 
__exã∫_ölöe
 
size_t


402 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

403 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

404 {  (
__ps
 !
NULL


405 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

408 
__BEGIN_NAMESPACE_STD


411 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

412 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

418 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

419 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

420 
__END_NAMESPACE_STD


423 #ifdef 
__USE_XOPEN2K8


426 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

427 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

428 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

432 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

433 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

434 
size_t
 
__nwc
, size_à
__Àn
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

440 #ifde‡
__USE_XOPEN


442 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

446 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

450 
__BEGIN_NAMESPACE_STD


453 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

454 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

455 
__END_NAMESPACE_STD


457 #ifde‡
__USE_ISOC99


458 
__BEGIN_NAMESPACE_C99


460 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

461 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

462 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

463 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

464 
__END_NAMESPACE_C99


468 
__BEGIN_NAMESPACE_STD


471 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

476 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

477 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

478 
__THROW
;

479 
__END_NAMESPACE_STD


481 #ifde‡
__USE_ISOC99


482 
__BEGIN_NAMESPACE_C99


485 
__exãnsi⁄__


486 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

487 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

488 
__THROW
;

492 
__exãnsi⁄__


493 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

494 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

495 
__ba£
Ë
__THROW
;

496 
__END_NAMESPACE_C99


499 #ifde‡
__USE_GNU


502 
__exãnsi⁄__


503 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

504 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

505 
__THROW
;

509 
__exãnsi⁄__


510 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

511 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

512 
__ba£
Ë
__THROW
;

515 #ifde‡
__USE_GNU


529 
	~<xloˇÀ.h
>

533 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

534 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

535 
__loˇÀ_t
 
__loc
Ë
__THROW
;

537 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

546 
__exãnsi⁄__


547 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

549 
__ba£
, 
__loˇÀ_t
 
__loc
)

550 
__THROW
;

552 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

553 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

554 
__THROW
;

556 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

557 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

558 
__THROW
;

560 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

561 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

562 
__loˇÀ_t
 
__loc
Ë
__THROW
;

566 #ifde‡
__USE_XOPEN2K8


569 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

570 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

574 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

575 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
;

583 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

586 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


587 
__BEGIN_NAMESPACE_STD


590 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

597 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

598 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

607 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

608 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

609 
__THROW
 ;

615 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

616 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

617 
__gnuc_va_li°
 
__¨g
)

623 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

628 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

629 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

630 
__gnuc_va_li°
 
__¨g
)

631 
__THROW
 ;

638 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

639 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

648 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

649 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

650 
__THROW
 ;

652 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

653 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

654 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

655 #ifde‡
__REDIRECT


659 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

660 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_fwsˇnf
)

663 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

664 
__isoc99_wsˇnf
)

666 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

667 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

668 ...), 
__isoc99_swsˇnf
)

671 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

673 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

674 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

675 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

676 
__THROW
;

677 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

678 
	#wsˇnf
 
__isoc99_wsˇnf


	)

679 
	#swsˇnf
 
__isoc99_swsˇnf


	)

683 
__END_NAMESPACE_STD


686 #ifde‡
__USE_ISOC99


687 
__BEGIN_NAMESPACE_C99


692 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

693 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

694 
__gnuc_va_li°
 
__¨g
)

700 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

704 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

705 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

706 
__gnuc_va_li°
 
__¨g
)

707 
__THROW
 ;

709 #i‡!
deföed
 
__USE_GNU
 \

710 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

711 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

712 #ifde‡
__REDIRECT


713 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

714 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

717 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

718 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

720 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

721 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

725 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

726 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
);

728 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
);

730 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

731 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

732 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

733 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

734 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

735 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

739 
__END_NAMESPACE_C99


743 
__BEGIN_NAMESPACE_STD


748 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

755 
wöt_t
 
	`gëwch¨
 ();

762 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

769 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

777 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

778 
__FILE
 *
__ª°ri˘
 
__°ªam
);

784 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

785 
__FILE
 *
__ª°ri˘
 
__°ªam
);

792 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

793 
__END_NAMESPACE_STD


796 #ifde‡
__USE_GNU


804 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

805 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

813 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

821 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

830 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

831 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

840 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

841 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

850 
__FILE
 *
__ª°ri˘
 
__°ªam
);

854 
__BEGIN_NAMESPACE_C99


858 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

859 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

860 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

861 
__END_NAMESPACE_C99


863 #ifde‡
__USE_GNU


864 
	~<xloˇÀ.h
>

868 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

869 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

870 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

871 
__loˇÀ_t
 
__loc
Ë
__THROW
;

880 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


881 
	#__√ed_iswxxx


	)

882 
	~<w˘y≥.h
>

886 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


887 
	~<bôs/wch¨2.h
>

890 #ifde‡
__LDBL_COMPAT


891 
	~<bôs/wch¨-ldbl.h
>

894 
__END_DECLS


902 #unde‡
__√ed_mb°©e_t


903 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
43
673
framebuffer.c
framebuffer.h
include/ctype.h
include/gcclib.h
include/kernel.h
include/stdio.h
include/string.h
include/system.h
include/types.h
init.c
interrupt.c
interrupt.h
lcddrv.c
lcddrv.h
lcdlib.c
lcdlib.h
lib/ctype.c
lib/div64.h
lib/muldi3.c
lib/printf.c
lib/printf.h
lib/string.c
lib/vsprintf.c
lib/vsprintf.h
main.c
nand.c
s3c24xx.h
serial.c
serial.h
/usr/include/ctype.h
/usr/include/printf.h
/usr/include/stdio.h
/usr/include/string.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/stdc-predef.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
